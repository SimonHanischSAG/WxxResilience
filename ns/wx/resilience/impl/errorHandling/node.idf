<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">QEZ1bmN0aW9uYWxJbnRlcmZhY2UKcHVibGljIHN0YXRpYyBpbnRlcmZhY2UgRXhjZXB0aW9uSGFu
ZGxpbmdMaXN0ZW5lciB7CglwdWJsaWMgdm9pZCBhY2NlcHQoU3RyaW5nIHBTZXJ2aWNlTmFtZSwg
SURhdGEgcFBpcGVsaW5lKSB0aHJvd3MgVW5rbm93blNlcnZpY2VFeGNlcHRpb247Cn0KCkBGdW5j
dGlvbmFsSW50ZXJmYWNlCnB1YmxpYyBzdGF0aWMgaW50ZXJmYWNlIENhbGxlclR5cGVTdXBwbGll
ciB7CglwdWJsaWMgU3RyaW5nIGdldCgpOwp9Cgpwcml2YXRlIHN0YXRpYyBQYXRoIGNyZWF0ZVN1
bW1hcml6ZWRFeGNlcHRpb25IYW5kbGluZygpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKCXN5
bmNocm9uaXplZChjcmVhdGVTdW1tYXJpemVkRXhjZXB0aW9uSGFuZGxpbmdMb2NrKSB7CgkJcmV0
dXJuIGNyZWF0ZVN1bW1hcml6ZWRFeGNlcHRpb25IYW5kbGluZyhTVU1NQVJJWkVEX0VYQ0VQVElP
Tl9IQU5ETElOR19GSUxFKTsKCX0KfQpwcml2YXRlIHN0YXRpYyBQYXRoIGNyZWF0ZVN1bW1hcml6
ZWRFeGNlcHRpb25IYW5kbGluZyhTdHJpbmcgcEZpbGVOYW1lKQoJCXRocm93cyBTZXJ2aWNlRXhj
ZXB0aW9uIHsKCUZpbGUgSVNEaXIgPSBTZXJ2ZXJBUEkuZ2V0U2VydmVyQ29uZmlnRGlyKCkuZ2V0
UGFyZW50RmlsZSgpOwoJRmlsZSBJU1BhY2thZ2VzID0gbmV3IGphdmEuaW8uRmlsZShJU0Rpciwg
InBhY2thZ2VzIik7CglmaW5hbCBQYXRoIGNvbmZpZ0RpciA9IFNlcnZlckFQSS5nZXRQYWNrYWdl
Q29uZmlnRGlyKFdYX1JFU0lMSUVOQ0UpLnRvUGF0aCgpOwoJZmluYWwgUGF0aCBvdXRwdXRGaWxl
ID0gY29uZmlnRGlyLnJlc29sdmUocEZpbGVOYW1lKTsKCVBhdGhzLmFzc2VydFBhcmVudERpckV4
aXN0cyhvdXRwdXRGaWxlKTsKCgl0cnkgewoJCXRyeSAoQ3JlYXRvciBjcmVhdG9yID0gU3VtbWFy
aXplZEV4Y2VwdGlvbkhhbmRsaW5nSGFuZGxlci5uZXdDcmVhdG9yKG91dHB1dEZpbGUpKSB7CgkJ
CWZvciAoRmlsZSBwYWNrYWdlRGlyIDogSVNQYWNrYWdlcy5saXN0RmlsZXMoKSkgewoJCQkJZGVi
dWdMb2dJbmZvKCJGb3VuZDogIiArIHBhY2thZ2VEaXIpOwoJCQkJaWYgKHBhY2thZ2VEaXIuaXNE
aXJlY3RvcnkoKSkgewoJCQkJCWZpbmFsIFN0cmluZyBwYWNrYWdlTmFtZSA9IHBhY2thZ2VEaXIu
Z2V0TmFtZSgpOwoJCQkJCWlmIChwYWNrYWdlTmFtZS5zdGFydHNXaXRoKCJXbSIpKSB7CgkJCQkJ
CWNvbnRpbnVlOwoJCQkJCX0KCQkJCQlmaW5hbCBGaWxlIHBhY2thZ2VDZmdEaXIgPSBuZXcgRmls
ZShwYWNrYWdlRGlyLCAiY29uZmlnIik7CgkJCQkJaWYgKHBhY2thZ2VDZmdEaXIuaXNEaXJlY3Rv
cnkoKSkgewoJCQkJCQlmaW5hbCBGaWxlIHBhY2thZ2VFaGRGaWxlID0gbmV3IEZpbGUocGFja2Fn
ZUNmZ0RpciwgRVJST1JfSEFORExJTkdfWE1MX0ZJTEUpOwoJCQkJCQlpZiAocGFja2FnZUVoZEZp
bGUuaXNGaWxlKCkpIHsKCQkJCQkJCWNyZWF0b3IucGFyc2UocGFja2FnZUVoZEZpbGUsIHBhY2th
Z2VOYW1lKTsKCQkJCQkJCWRlYnVnTG9nSW5mbygicGFyc2U6ICIgKyBwYWNrYWdlRWhkRmlsZSk7
CgoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoJCXZhbGlkYXRlWE1MKCk7Cgl9IGNhdGNo
IChFeGNlcHRpb24gZSkgewoJCWxvZ0Vycm9yKCJFcnJvciBkdXJpbmcgcGFyc2luZyBvZiBzdW1t
YXJpemVkRXhjZXB0aW9uSGFuZGxpbmdEZWZpbml0aW9uOiAiICsgZS5nZXRNZXNzYWdlKCkpOwoJ
CXRocm93IEV4Y2VwdGlvbnMuc2hvdyhlLCBTZXJ2aWNlRXhjZXB0aW9uLmNsYXNzKTsKCX0KCXJl
dHVybiBvdXRwdXRGaWxlOwp9Cgpwcml2YXRlIHN0YXRpYyBmaW5hbCBFeGNlcHRpb25IYW5kbGlu
Z0xpc3RlbmVyIERFRkFVTFRfRVJST1JfSEFORExFUiA9IG5ldyBFeGNlcHRpb25IYW5kbGluZ0xp
c3RlbmVyKCkgewoJcHVibGljIHZvaWQgYWNjZXB0KFN0cmluZyBzLCBJRGF0YSBkKSB0aHJvd3Mg
VW5rbm93blNlcnZpY2VFeGNlcHRpb24gewoJCWxvZ0RlYnVnKCJEZWZhdWx0RXJyb3JIYW5kbGVy
OiAtLT4gIiArIHMpOwoJCXRyeSB7CgkJCVNlcnZpY2UuZG9JbnZva2UoTlNOYW1lLmNyZWF0ZShz
KSwgZCk7CgkJfSBjYXRjaCAoVW5rbm93blNlcnZpY2VFeGNlcHRpb24gdXNlKSB7CgkJCWxvZ0Rl
YnVnKCJEZWZhdWx0RXJyb3JIYW5kbGVyOiAiICsgdXNlLmdldENsYXNzKCkuZ2V0TmFtZSgpICsg
IiwgIiArIHVzZS5nZXRNZXNzYWdlKCkpOwoJCQl0aHJvdyB1c2U7CgkJfSBjYXRjaCAoRXhjZXB0
aW9uIGUpIHsKCQkJbG9nRGVidWcoIkRlZmF1bHRFcnJvckhhbmRsZXI6ICIgKyBlLmdldENsYXNz
KCkuZ2V0TmFtZSgpICsgIiwgIiArIGUuZ2V0TWVzc2FnZSgpKTsKCQkJdGhyb3cgbmV3IFVuZGVj
bGFyZWRUaHJvd2FibGVFeGNlcHRpb24oZSk7CgkJfQoJCWxvZ0RlYnVnKCJEZWZhdWx0RXJyb3JI
YW5kbGVyOiA8LS0iKTsKCX0KfTsKcHJpdmF0ZSBzdGF0aWMgRXhjZXB0aW9uSGFuZGxpbmdMaXN0
ZW5lciBnZXRFcnJvckhhbmRsZXIoKSB7CglzeW5jaHJvbml6ZWQgKGV4Y2VwdGlvbkhhbmRsaW5n
TGlzdGVuZXJMb2NrKSB7CgkJaWYgKF9leGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyID09IG51bGwp
IHsKCQkJcmV0dXJuIERFRkFVTFRfRVJST1JfSEFORExFUjsKCQl9IGVsc2UgewoJCQlyZXR1cm4g
X2V4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXI7CgkJfQoJfQp9CnB1YmxpYyBzdGF0aWMgdm9pZCBz
ZXRFcnJvckhhbmRsZXIoRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciBwRXJyb3JIYW5kbGluZ0xp
c3RlbmVyKSB7CglzeW5jaHJvbml6ZWQgKGV4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXJMb2NrKSB7
CgkJX2V4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIgPSBwRXJyb3JIYW5kbGluZ0xpc3RlbmVyOwoJ
fQp9CnByaXZhdGUgc3RhdGljIHZvaWQgaW52b2tlRXJyb3JIYW5kbGVyKElEYXRhIHBIYW5kbGlu
Z1NlcnZpY2VJbnB1dCwKCQlmaW5hbCBTdHJpbmcgcFNlcnZpY2VOYW1lKSB0aHJvd3MgRXhjZXB0
aW9uIHsKCWxvZ0RlYnVnKCJpbnZva2VFcnJvckhhbmRsZXI6IC0tPiAiKTsKCWZpbmFsIEV4Y2Vw
dGlvbkhhbmRsaW5nTGlzdGVuZXIgZWhsID0gZ2V0RXJyb3JIYW5kbGVyKCk7Cglsb2dEZWJ1Zygi
aW52b2tlRXJyb3JIYW5kbGVyOiBlaD0iICsgZWhsKTsKCWVobC5hY2NlcHQocFNlcnZpY2VOYW1l
LCBwSGFuZGxpbmdTZXJ2aWNlSW5wdXQpOwoJbG9nRGVidWcoImludm9rZUVycm9ySGFuZGxlcjog
PC0tIik7CgoJLy8gLS0tIDw8SVMtRU5EPj4gLS0tCn0KCnByaXZhdGUgc3RhdGljIERvY3VtZW50
IGdldGVycm9ySGFuZGxpbmdzKCkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewoJc3luY2hyb25p
emVkKGV4Y2VwdGlvbkhhbmRsaW5nTG9jaykgewoJCWlmIChfZXhjZXB0aW9uSGFuZGxpbmcgIT0g
bnVsbCkgewoJCQlyZXR1cm4gX2V4Y2VwdGlvbkhhbmRsaW5nOwoJCX0KCX0KCWluaXRpYWxpemVF
eGNlcHRpb25IYW5kbGluZ3MobnVsbCk7CglzeW5jaHJvbml6ZWQgKGV4Y2VwdGlvbkhhbmRsaW5n
TG9jaykgewoJCWlmIChfZXhjZXB0aW9uSGFuZGxpbmcgPT0gbnVsbCkgewoJCQl0aHJvdyBuZXcg
SWxsZWdhbFN0YXRlRXhjZXB0aW9uKCJVbmFibGUgdG8gaW5pdGlhbGl6ZSBlcnJvckhhbmRsaW5n
LiBEaWQgeW91IGFzc2VtYmxlIGl0PyIpOwoJCX0gZWxzZSB7CgkJCXJldHVybiBfZXhjZXB0aW9u
SGFuZGxpbmc7CgkJfQoJfQp9Cgpwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0Q2FsbGVyVHlwZSgp
IHsKCUNhbGxlclR5cGVTdXBwbGllciBjdHM7IAoJc3luY2hyb25pemVkIChjYWxsZXJUeXBlU3Vw
cGxpZXJMb2NrKSB7CgkJY3RzID0gY2FsbGVyVHlwZVN1cHBsaWVyOwoJfQoJaWYgKGN0cyA9PSBu
dWxsKSB7CgkJY3RzID0gREVGQVVMVF9DQUxMRVJfVFlQRV9TVVBQTElFUjsKCX0KCXJldHVybiBj
dHMuZ2V0KCk7Cn0KCnB1YmxpYyBzdGF0aWMgdm9pZCBzZXRDYWxsZXJUeXBlU3VwcGxpZXIoQ2Fs
bGVyVHlwZVN1cHBsaWVyIHBTdXBwbGllcikgewoJc3luY2hyb25pemVkIChjYWxsZXJUeXBlU3Vw
cGxpZXJMb2NrKSB7CgkJY2FsbGVyVHlwZVN1cHBsaWVyID0gcFN1cHBsaWVyOwoJfQp9Cgpwcml2
YXRlIHN0YXRpYyBTdHJpbmcgZ2V0Q2FsbGVyVHlwZUJ5Q2FsbGluZ1NlcnZpY2UoKSB7CglJRGF0
YSBpbnB1dCA9IG51bGw7CglTdHJpbmcgdHlwZSA9ICIiOwoJLy8gb3V0cHV0CglJRGF0YSBvdXRw
dXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7Cgl0cnkgewoJCW91dHB1dCA9IFNlcnZpY2UuZG9J
bnZva2UoICJ3eC5yZXNpbGllbmNlLmltcGwuY2FsbGVyIiwgImdldENhbGxlciIsIGlucHV0ICk7
CgkJSURhdGFNYXAgb3V0cHV0TWFwID0gbmV3IElEYXRhTWFwKG91dHB1dCk7CgkJSURhdGFNYXAg
Y2FsbGVyTWFwID0gbmV3IElEYXRhTWFwKG91dHB1dE1hcC5nZXRBc0lEYXRhKCJjYWxsZXIiKSk7
CgkJcmV0dXJuIGNhbGxlck1hcC5nZXRBc1N0cmluZygidHlwZSIpOwoJfSBjYXRjaCAoRXhjZXB0
aW9uIGUpIHsKCQlyZXR1cm4gdHlwZTsKCX0JCn0KCgoJcHJpdmF0ZSBzdGF0aWMgU3RyaW5nIGdl
dENhbGxTdGFja0FzSlNPTlN0cmluZyhBcnJheUxpc3Q8SURhdGFDdXJzb3I+IGVycm9ySW5mb0hp
ZXJhY2h5KSB7CgoJCUlEYXRhW10gY2FsbFN0YWNrID0gSURhdGFVdGlsLmdldElEYXRhQXJyYXko
ZXJyb3JJbmZvSGllcmFjaHkuZ2V0KDApLCBFUlJPUl9JTkZPX0NBTExfU1RBQ0spOwoJCQoJCVN0
cmluZyBqc29uU3RyaW5nID0gIiI7CgkJCgkJaWYgKGNhbGxTdGFjayAhPSBudWxsKSB7CgkJCS8v
IGlucHV0CgkJCUlEYXRhIGlucHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJCQlJRGF0YUN1
cnNvciBpbnB1dEN1cnNvciA9IGlucHV0LmdldEN1cnNvcigpOwoKCQkJLy8gZG9jdW1lbnQKCQkJ
SURhdGEgZG9jdW1lbnQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJCUlEYXRhQ3Vyc29yIGRv
Y3VtZW50Q3Vyc29yID0gZG9jdW1lbnQuZ2V0Q3Vyc29yKCk7CgkJCUlEYXRhVXRpbC5wdXQoZG9j
dW1lbnRDdXJzb3IsICJjYWxsU3RhY2siLCBjYWxsU3RhY2spOwoJCQlJRGF0YVV0aWwucHV0KGlu
cHV0Q3Vyc29yLCAiZG9jdW1lbnQiLCBkb2N1bWVudCk7CgkJCUlEYXRhVXRpbC5wdXQoaW5wdXRD
dXJzb3IsICJwcmV0dHlQcmludCIsICJmYWxzZSIpOwoJCQlpbnB1dEN1cnNvci5kZXN0cm95KCk7
CgoJCQkvLyBvdXRwdXQKCQkJSURhdGEgb3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJ
CQl0cnkgewoJCQkJb3V0cHV0ID0gU2VydmljZS5kb0ludm9rZSgicHViLmpzb24iLCAiZG9jdW1l
bnRUb0pTT05TdHJpbmciLCBpbnB1dCk7CgkJCQlJRGF0YUN1cnNvciBvdXRwdXRDdXJzb3IgPSBv
dXRwdXQuZ2V0Q3Vyc29yKCk7CgkJCQlqc29uU3RyaW5nID0gSURhdGFVdGlsLmdldFN0cmluZyhv
dXRwdXRDdXJzb3IsICJqc29uU3RyaW5nIik7CgkJCQlvdXRwdXRDdXJzb3IuZGVzdHJveSgpOwoJ
CQl9IGNhdGNoIChFeGNlcHRpb24gZSkgewoJCQkJLy8gSXQgaXMgcG9zc2libGUsIHRoYXQgdGhp
cyBzZXJ2aWNlIGRvZXMgbm90IGV4aXN0cyAoV004LjIgZW52aXJvbm1lbnRzL3N0b3JlcykuCgkJ
CQkvLyBUcnkgYWdhaW4gd2l0aCBTZXJ2aWNlIGZyb20gV21KU09OIHBhY2thZ2U6CgkJCQkvLyBU
aGlzIGJsb2NrIGNhbiBiZSBkZWxldGVkLCBpZiBldmVyeSBlbnZpcm9ubWVudCBpcyBvbiBXTTku
MCEKCQkJCXRyeSB7CgkJCQkJb3V0cHV0ID0gU2VydmljZS5kb0ludm9rZSgicHViLmpzb24iLCAi
ZG9jdW1lbnRUb0pTT04iLCBpbnB1dCk7CgkJCQkJSURhdGFDdXJzb3Igb3V0cHV0Q3Vyc29yID0g
b3V0cHV0LmdldEN1cnNvcigpOwoJCQkJCWpzb25TdHJpbmcgPSBJRGF0YVV0aWwuZ2V0U3RyaW5n
KG91dHB1dEN1cnNvciwgImpzb24iKTsKCQkJCQlvdXRwdXRDdXJzb3IuZGVzdHJveSgpOwoJCQkJ
fSBjYXRjaCAoRXhjZXB0aW9uIGlubmVyRXgpIHsKCQkJCX0KCQkJfQoJCX0KCQkKCQlyZXR1cm4g
anNvblN0cmluZzsKCX0KCQoJcHJpdmF0ZSBzdGF0aWMgSGFzaE1hcDxTdHJpbmcsIFN0cmluZz4g
Y3JlYXRlR2VuZXJpY1ZhbHVlTWFwKEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBoYW5kbGluZywgYm9v
bGVhbiBicmVha1JldHJ5TG9vcCkgewoJCUhhc2hNYXA8U3RyaW5nLCBTdHJpbmc+IGdlbmVyaWNW
YWx1ZU1hcCA9IG5ldyBIYXNoTWFwPFN0cmluZywgU3RyaW5nPigpOwoJCS8vIGV2YWx1YXRlIGVy
cm9yVG9CZVRocm93bjoKCQlTdHJpbmcgZXJyb3JUb0JlVGhyb3duID0gaGFuZGxpbmcuZ2V0RXJy
b3JUb0JlVGhyb3duKCk7CgkJCgkJaW50IHJldHJ5Q291bnQgPSBnZXRSZXRyeUNvdW50KCk7CgkJ
Z2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX1JFVFJZX0NPVU5ULCBTdHJpbmcudmFs
dWVPZihyZXRyeUNvdW50KSk7CgoJCVN0cmluZyBtYXhSZXRyeUF0dGVtcHRzU3RyaW5nID0gaGFu
ZGxpbmcuZ2V0TWF4UmV0cnlBdHRlbXB0cygpOwoJCUludGVnZXIgbWF4UmV0cnlBdHRlbXB0cyA9
IG51bGw7CgkJdHJ5IHsKCQkJbWF4UmV0cnlBdHRlbXB0cyA9IEludGVnZXIudmFsdWVPZihtYXhS
ZXRyeUF0dGVtcHRzU3RyaW5nKTsKCQl9IGNhdGNoIChOdW1iZXJGb3JtYXRFeGNlcHRpb24gbmZl
KSB7CgkJfQkJCQkJCQoJCQoJCWludCBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQWJvcnQgPSAwOwoJ
CVN0cmluZyBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQ2FuY2VsUmV0cnlTdHJpbmcgPSBnZXRWYWx1
ZUNvbmYoCgkJCQlNQVhfUkVUUllfQVRURU1QVFNfQkVGT1JFX0NBTkNFTF9SRVRSWSwgV1hfUkVT
SUxJRU5DRSwgInRydWUiLAoJCQkJIiIsICIiLCAiIiwgIiIpOwkJCgkJdHJ5IHsKCQkJbWF4UmV0
cnlBdHRlbXB0c0JlZm9yZUFib3J0ID0gSW50ZWdlci52YWx1ZU9mKG1heFJldHJ5QXR0ZW1wdHNC
ZWZvcmVDYW5jZWxSZXRyeVN0cmluZyk7CgkJfSBjYXRjaCAoTnVtYmVyRm9ybWF0RXhjZXB0aW9u
IG5mZSkge30KCgkJLy8gRGV0ZXJtaW5lIGVycm9yVG9CZVRocm93biBhbmQgbWF4UmV0cnlBdHRl
bXB0cyBhY2NvcmRpbmcgdG8gcmV0cnkgY29uZmlndXJhdGlvbjoKCQlpZiAoYnJlYWtSZXRyeUxv
b3ApIHsKCQkJLy8gYnJlYWsgZW5kbGVzcyBsb29wIC0tPiBvdmVyd3JpdGUgd2l0aCBOT05FIG9y
IEZBVEFMCgkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9FUlJPUl9UT19CRV9U
SFJPV05fSUQsIEVSUk9SX05PTkUuZXF1YWxzKGVycm9yVG9CZVRocm93bik/RVJST1JfTk9ORTpF
UlJPUl9GQVRBTCk7CgkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9NQVhfUkVU
UllfQVRURU1QVFMsIFN0cmluZy52YWx1ZU9mKHJldHJ5Q291bnQpKTsKCQl9IGVsc2UgaWYgKG1h
eFJldHJ5QXR0ZW1wdHMgIT0gbnVsbCAmJiBtYXhSZXRyeUF0dGVtcHRzID09IC0xICYmIHJldHJ5
Q291bnQgPCBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQWJvcnQpIHsKCQkJLy8gZW5kbGVzcyBsb29w
IC0tPiBUUkFOU0lFTlQKCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX0VSUk9S
X1RPX0JFX1RIUk9XTl9JRCwgRVJST1JfVFJBTlNJRU5UKTsKCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1
dChFSERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUywgbWF4UmV0cnlBdHRlbXB0c0JlZm9y
ZUNhbmNlbFJldHJ5U3RyaW5nKTsKCQl9IGVsc2UgewoJCQkvLyBsZXNzIHRoYW4gbWF4UmV0cnlB
dHRlbXB0cyAtLT4gVFJBTlNJRU5UCgkJCWlmIChtYXhSZXRyeUF0dGVtcHRzICE9IG51bGwgJiYg
cmV0cnlDb3VudCA8IG1heFJldHJ5QXR0ZW1wdHMpIHsKCQkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQo
RUhEX0FUVFJJQlVURV9FUlJPUl9UT19CRV9USFJPV05fSUQsIEVSUk9SX1RSQU5TSUVOVCk7CgkJ
CQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfTUFYX1JFVFJZX0FUVEVNUFRTLCBt
YXhSZXRyeUF0dGVtcHRzU3RyaW5nKTsKCQkJfSBlbHNlIHsJCQkJCQoJCQkJIGlmIChFUlJPUl9O
T05FLmVxdWFscyhlcnJvclRvQmVUaHJvd24pKSB7CgkJCQkJIGdlbmVyaWNWYWx1ZU1hcC5wdXQo
RUhEX0FUVFJJQlVURV9FUlJPUl9UT19CRV9USFJPV05fSUQsIEVSUk9SX05PTkUpOwoJCQkJIH0g
ZWxzZSB7CgkJCQkJIC8vIEZpbmFsIGJlaGF2aW9yIGZvciBhYm9ydAoJCQkJCSBnZW5lcmljVmFs
dWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfRVJST1JfVE9fQkVfVEhST1dOX0lELCBFUlJPUl9GQVRB
TCk7CgkJCQkgfQoJCQkJIC8vIG1heFJldHJ5QXR0ZW1wdHMgaXMgcmVhY2hlZCBvciB3YXMgbm90
IGRlZmluZWQgKC0+IDApCgkJCQkgU3RyaW5nIG1heFJldHJ5QXR0ZW1wdHNSZXN1bHQgPSBtYXhS
ZXRyeUF0dGVtcHRzICE9IG51bGwgPyBtYXhSZXRyeUF0dGVtcHRzU3RyaW5nIDogIjAiOwoJCQkJ
IGdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMsIG1h
eFJldHJ5QXR0ZW1wdHNSZXN1bHQpOwoJCQl9CgkJfQoJCXJldHVybiBnZW5lcmljVmFsdWVNYXA7
Cgl9CgkKCS8qKgoJICogRmlsdGVycyB0aGUgZXJyb3IgaGllcmFyY2h5IGZvciB0aGUgZGVlcGVz
dCBzZXJ2aWNlIC0tPiBzaG93cwoJICogaW4gd2hpY2ggc2VydmljZSBvZiBvdXIgY29kZSB0aGUg
ZXJyb3Igb2NjdXJlZAoJICogCgkgKiBAcGFyYW0gaGllcmFjaGljYWxFcnJvckluZm8KCSAqIEBy
ZXR1cm4gdGhlIGxldmVsIG9mIHRoZSBkZWVwZXN0IHNlcnZpY2UgbmFtZQoJICovCglwcml2YXRl
IHN0YXRpYyBpbnQgZ2V0RGVlcGVzdEFwcGxpY2F0aW9uU2VydmljZUxldmVsKEFycmF5TGlzdDxF
cnJvckluZm8+IGhpZXJhY2hpY2FsRXJyb3JJbmZvKSB7CgkJU3RyaW5nIHNlcnZpY2UgPSBudWxs
OwoJCWZvciAoaW50IGxldmVsID0gaGllcmFjaGljYWxFcnJvckluZm8uc2l6ZSgpIC0gMTsgbGV2
ZWwgPiAwOyBsZXZlbC0tKSB7CgkJCXNlcnZpY2UgPSBoaWVyYWNoaWNhbEVycm9ySW5mby5nZXQo
bGV2ZWwpLmdldFNlcnZpY2UoKTsKCQkJLy8gY3JlYXRlIG9mIExpc3Qgb2YgRmxvd25hbWVzIHRv
IGlnbm9yZQoJCQlMaXN0PFN0cmluZz4gaWdub3JlRmxvd3MgPSBBcnJheXMuYXNMaXN0KCJ3eC5y
ZXNpbGllbmNlLnB1Yi5yZXNpbGllbmNlOnRocm93RXJyb3IiLAoJCQkJCSAJCQkJCQkJCSJ3eC5y
ZXNpbGllbmNlLnB1Yi5yZXNpbGllbmNlOnRocm93RXJyb3JJZk5lY2Vzc2FyeSIsIAoJCQkJCQkJ
CQkJCQkJICJ3eC5yZXNpbGllbmNlLnB1Yi5yZXNpbGllbmNlOnBvc3RQcm9jZXNzRm9yVG9wTGV2
ZWxTZXJ2aWNlIik7CgkJCQoJCQkKCQkJCgkJCQoJCQkKCQkJaWYgKHNlcnZpY2UgIT0gbnVsbCAm
JiAKCQkJCSFzZXJ2aWNlLnN0YXJ0c1dpdGgoInB1Yi4iKSAmJgoJCQkJIXNlcnZpY2Uuc3RhcnRz
V2l0aCgid20uIikgJiYgCgkJCQkhaWdub3JlRmxvd3MuY29udGFpbnMoc2VydmljZSkKCQkJKSB7
CgkJCQlyZXR1cm4gbGV2ZWw7CgkJCX0KCQl9CgoJCXJldHVybiAwOwoJfQoKCQoJLyoqCgkgKiBM
b2dzIG1lc3NhZ2UgZnJvbSBhIGNhdGFsb2cuCgkgKiAKCSAqIEBwYXJhbSBhRmFjaWxpdHlLZXkK
CSAqICAgICAgICAgICAgZGVmaW5lcyB0aGUgZmFjaWxpdHkgaW4gdGhlIGNhdGFsb2cKCSAqIEBw
YXJhbSBhTWVzc2FnZUtleQoJICogICAgICAgICAgICBjb3JyZXNwb25kcyB3aXRoIHRoZSBtZXNz
YWdlIGtleSBpbiB0aGUgY2F0YWxvZwoJICogQHBhcmFtIGFNZXNzYWdlUGFyYW1zCgkgKiAgICAg
ICAgICAgIGlmIG1lc3NhZ2UgaW4gdGhlIGNhdGFsb2cgaGFzIHBhcmFtZXRlcnMKCSAqIEB0aHJv
d3MgU2VydmljZUV4Y2VwdGlvbgoJICogICAgICAgICAgICAgdGhyb3duIGlmIHRoZSBsb2dnaW5n
IGZhaWxlZAoJICovCgkvKnByaXZhdGUgc3RhdGljIHZvaWQgbG9nTWVzc2FnZUZyb21DYXRhbG9n
KFN0cmluZyBhRmFjaWxpdHlLZXksIFN0cmluZyBhTWVzc2FnZUtleSwgU3RyaW5nW10gYU1lc3Nh
Z2VQYXJhbXMpIHsKCQkvLyBpbnB1dAoJCUlEYXRhIHRJbnB1dCA9IElEYXRhRmFjdG9yeS5jcmVh
dGUoKTsKCQlJRGF0YUN1cnNvciBpbnB1dEN1cnNvciA9IHRJbnB1dC5nZXRDdXJzb3IoKTsKCQlJ
RGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAiZmFjaWxpdHlLZXkiLCBhRmFjaWxpdHlLZXkpOwoJ
CUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3IsICJtZXNzYWdlS2V5IiwgYU1lc3NhZ2VLZXkpOwoJ
CgkJLy8gVGhlcmUgYXJlIHNvbWUgbWVzc2FnZSBwYXJhbXMgcHJvdmlkZWQKCQlpZiAoYU1lc3Nh
Z2VQYXJhbXMubGVuZ3RoID4gMCkgewoJCQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAibWVz
c2FnZVBhcmFtcyIsIGFNZXNzYWdlUGFyYW1zKTsKCQl9CgkJaW5wdXRDdXJzb3IuZGVzdHJveSgp
OwoJCgkJdHJ5IHsKCQkJU2VydmljZS5kb0ludm9rZSgid3gucmVzaWxpZW5jZS5pbXBsOiIsICJs
b2dNZXNzYWdlRnJvbUNhdGFsb2ciLCB0SW5wdXQpOwoJCX0gCgkJY2F0Y2ggKEV4Y2VwdGlvbiBl
KSB7CgkJfQoJfSovCgoJCglwcml2YXRlIHN0YXRpYyB2b2lkIHZhbGlkYXRlWE1MKCkgdGhyb3dz
IFNlcnZpY2VFeGNlcHRpb24gewoJCWxvZ0luZm8oIlZhbGlkYXRpbmcgdGhlIHN1bW1hcml6ZWQg
ZXJyb3IgaGFuZGxpbmciKTsKCQlGaWxlIHhtbEZpbGUgPSBuZXcgRmlsZShTZXJ2ZXJBUEkuZ2V0
UGFja2FnZUNvbmZpZ0RpcihXWF9SRVNJTElFTkNFKSArICIvIiArIFNVTU1BUklaRURfRVhDRVBU
SU9OX0hBTkRMSU5HX0ZJTEUpOwoJCUZpbGUgc2NoZW1hRmlsZSA9IG5ldyBGaWxlKFNlcnZlckFQ
SS5nZXRQYWNrYWdlQ29uZmlnRGlyKFdYX1JFU0lMSUVOQ0UpICsgIi8iICsgRVhDRVBUSU9OX0hB
TkRMSU5HX1hTRF9GSUxFKTsKCQkKCQl0cnkgewoJCQkvLyAxLiBMb29rdXAgYSBmYWN0b3J5IGZv
ciB0aGUgVzNDIFhNTCBTY2hlbWEgbGFuZ3VhZ2UKCQkJU2NoZW1hRmFjdG9yeSBmYWN0b3J5ID0g
U2NoZW1hRmFjdG9yeS5uZXdJbnN0YW5jZSgiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hl
bWEiKTsKCQkJLy8gMi4gQ29tcGlsZSB0aGUgc2NoZW1hLgoJCQkvLyBIZXJlIHRoZSBzY2hlbWEg
aXMgbG9hZGVkIGZyb20gYSBqYXZhLmlvLkZpbGUsIGJ1dCB5b3UgY291bGQgdXNlCgkJCS8vIGEg
amF2YS5uZXQuVVJMIG9yIGEgamF2YXgueG1sLnRyYW5zZm9ybS5Tb3VyY2UgaW5zdGVhZC4KCQkJ
U2NoZW1hIHNjaGVtYSA9IGZhY3RvcnkubmV3U2NoZW1hKHNjaGVtYUZpbGUpOwkKCQkJLy8gMy4g
R2V0IGEgdmFsaWRhdG9yIGZyb20gdGhlIHNjaGVtYS4KCQkJVmFsaWRhdG9yIHZhbGlkYXRvciA9
IHNjaGVtYS5uZXdWYWxpZGF0b3IoKTsJCgkJCS8vIDQuIFBhcnNlIHRoZSBkb2N1bWVudCB5b3Ug
d2FudCB0byBjaGVjay4KCQkJU291cmNlIHNvdXJjZSA9IG5ldyBTdHJlYW1Tb3VyY2UoeG1sRmls
ZSk7CQoJCQkvLyA1LiBDaGVjayB0aGUgZG9jdW1lbnQKCQkJdmFsaWRhdG9yLnZhbGlkYXRlKHNv
dXJjZSk7CgkJCWxvZ0luZm8oeG1sRmlsZS5nZXROYW1lKCkgKyAiIGlzIHZhbGlkIik7CgkJfSAK
CQljYXRjaCAoU0FYRXhjZXB0aW9ufElPRXhjZXB0aW9uIGV4KSB7CgkJCVN0cmluZyBtZXNzYWdl
ID0geG1sRmlsZS5nZXROYW1lKCkgKyAiIGlzIG5vdCB2YWxpZCBiZWNhdXNlIFxuIiArIGV4Lmdl
dE1lc3NhZ2UoKTsKCQkJZmluYWwgU2VydmljZUV4Y2VwdGlvbiBzZSA9IG5ldyBTZXJ2aWNlRXhj
ZXB0aW9uKG1lc3NhZ2UpOwoJCQlzZS5pbml0Q2F1c2UoZXgpOwoJCQl0aHJvdyBzZTsKCQl9CQoJ
fQoKCXByaXZhdGUgc3RhdGljIFN0cmluZyBnZXRWYWx1ZUNvbmYoU3RyaW5nIGtleSwgU3RyaW5n
IHd4Q29uZmlnUGtnTmFtZSwKCQkJU3RyaW5nIG5vU2VydmljZUV4Y2VwdGlvbiwgU3RyaW5nIHN1
YnN0aXR1dGVWYXJpYWJsZXMsCgkJCVN0cmluZyBpZ25vcmVHbG9iYWxWYWx1ZXMsIFN0cmluZyBz
Y2FuQWxsQ29uZmlndXJhdGlvbnMsCgkJCVN0cmluZyBub1ZhcmlhYmxlSW50ZXJwb2xhdGlvbikg
ewoJCVN0cmluZyBwcm9wZXJ0eVZhbHVlID0gIiAiOwoJCS8vIGlucHV0CgkJSURhdGEgY29uZmln
UGFyYW0gPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJSURhdGFDdXJzb3IgY29uZmlnUGFyYW1D
dXJzb3IgPSBjb25maWdQYXJhbS5nZXRDdXJzb3IoKTsKCQlJRGF0YVV0aWwucHV0KGNvbmZpZ1Bh
cmFtQ3Vyc29yLCAia2V5Iiwga2V5KTsKCQlJRGF0YVV0aWwucHV0KGNvbmZpZ1BhcmFtQ3Vyc29y
LCAid3hDb25maWdQa2dOYW1lIiwgd3hDb25maWdQa2dOYW1lKTsKCQlJRGF0YVV0aWwucHV0KGNv
bmZpZ1BhcmFtQ3Vyc29yLCAibm9TZXJ2aWNlRXhjZXB0aW9uIiwKCQkJCW5vU2VydmljZUV4Y2Vw
dGlvbik7CgkJY29uZmlnUGFyYW1DdXJzb3IuZGVzdHJveSgpOwoJCgkJLy8gb3V0cHV0CgkJSURh
dGEgY29uZmlnT3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJCXRyeSB7CgkJCWNvbmZp
Z091dHB1dCA9IFNlcnZpY2UuZG9JbnZva2UoInd4LmNvbmZpZy5wdWIiLCAiZ2V0VmFsdWUiLAoJ
CQkJCWNvbmZpZ1BhcmFtKTsKCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgewoJCQlyZXR1cm4gcHJv
cGVydHlWYWx1ZTsKCQl9CgkJSURhdGFDdXJzb3IgY29uZmlnT3V0cHV0Q3Vyc29yID0gY29uZmln
T3V0cHV0LmdldEN1cnNvcigpOwoJCXByb3BlcnR5VmFsdWUgPSBJRGF0YVV0aWwKCQkJCS5nZXRT
dHJpbmcoY29uZmlnT3V0cHV0Q3Vyc29yLCAicHJvcGVydHlWYWx1ZSIpOwoJCWNvbmZpZ091dHB1
dEN1cnNvci5kZXN0cm95KCk7CgkJbG9nRGVidWcoImdldFZhbHVlQ29uZiBmb3IgIiArIGtleSAr
ICIgcmV0dXJuczogIiArIHByb3BlcnR5VmFsdWUpOwoJCXJldHVybiBwcm9wZXJ0eVZhbHVlOwoJ
fQoJCglwcml2YXRlIHN0YXRpYyBpbnQgZ2V0UmV0cnlDb3VudCgpIHsKCQlJRGF0YSBpbnB1dCA9
IG51bGw7CgkJLy8gb3V0cHV0CgkJSURhdGEgb3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgp
OwoJCXRyeSB7CgkJCW91dHB1dCA9IFNlcnZpY2UuZG9JbnZva2UoInB1Yi5mbG93IiwgImdldFJl
dHJ5Q291bnQiLCBpbnB1dCk7CgkJCUlEYXRhQ3Vyc29yIG91dHB1dEN1cnNvciA9IG91dHB1dC5n
ZXRDdXJzb3IoKTsKCQkJcmV0dXJuIEludGVnZXIucGFyc2VJbnQoSURhdGFVdGlsLmdldFN0cmlu
ZyhvdXRwdXRDdXJzb3IsICJyZXRyeUNvdW50IikpOwoJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7
CgkJCXJldHVybiAwOwoJCX0KCX0KCQoJLyoqCgkgKiBFeHRyYWN0cyBhbiBlcnJvciBoaWVyYXJj
aHkgZm9yIGEgZ2l2ZW4gZXJyb3IgaGllcmFyY2h5IChub3JtYWxseSBvbmx5CgkgKiBmaWxsZWQg
Ynkgb25lIChyb290KSBlcnJvcikuIFVzZXMgdGhlIGNhbGxTdGFjayBhbmQgdGhlIGRlZXBlc3Qg
ZXJyb3JJbmZvIHRvIGJ1aWxkIGhpZWFyY2h5LgoJICogCgkgKiBAcGFyYW0gcEVycm9ySGllcmFy
Y2h5CgkgKiAgICAgICAgICAgIC0gYXJyYXkgbGlzdCBvZiBJRGF0YUN1cnNvcnMgb24gcHViLmV2
ZW50OmV4Y2VwdGlvbkluZm8KCSAqIEByZXR1cm4gZnVsbCBhcnJheSBsaXN0IGFycmF5IGxpc3Qg
b2YgRXJyb3JJbmZvIG9uCgkgKiAgICAgICAgIHB1Yi5ldmVudDpleGNlcHRpb25JbmZvLCBjb250
YWluaW5nIGFsbCBlcnJvcnMgZnJvbSByb290KDApIHRvCgkgKiAgICAgICAgIG9yaWdpbiAoc2l6
ZSBvZiBhcnJheSBsaXN0KQoJICovCglwcml2YXRlIHN0YXRpYyBBcnJheUxpc3Q8RXJyb3JJbmZv
PiBleHRyYWN0RXJyb3JIaWVyYXJjaHkoQXJyYXlMaXN0PElEYXRhQ3Vyc29yPiBwRXJyb3JIaWVy
YXJjaHkpIHsJCgkJaWYgKHBFcnJvckhpZXJhcmNoeSA9PSBudWxsKSB7CgkJCXJldHVybiBudWxs
OwoJCX0KCQkKCQlJRGF0YUN1cnNvciBkZWVwZXN0TmVzdGVkRXJyb3IgPSBnZXREZWVwZXN0TmVz
dGVkRXJyb3IocEVycm9ySGllcmFyY2h5KTsKCQkKCQkvLyBnZXQgY2FsbFN0YWNrIG9mIGVycm9y
OgoJCUlEYXRhW10gY2FsbFN0YWNrID0gSURhdGFVdGlsLmdldElEYXRhQXJyYXkocEVycm9ySGll
cmFyY2h5LmdldCgwKSwgImNhbGxTdGFjayIpOwoJCUFycmF5TGlzdDxFcnJvckluZm8+IGVycm9y
SW5mb0xpc3QgPSBudWxsOwoJCQoJCWlmIChjYWxsU3RhY2sgIT0gbnVsbCkgewoJCQllcnJvcklu
Zm9MaXN0ID0gbmV3IEFycmF5TGlzdDxFcnJvckluZm8+KGNhbGxTdGFjay5sZW5ndGgpOwoJCQkK
CQkJLy8gdXNlIHRoZSBlcnJvciBhbmQgZXJyb3JUeXBlIG9mIHRoZSBkZWVwZXN0IGVycm9ySW5m
byB0byBkZXRlcm1pbmUgdGhlIGVycm9yIGFuZCBlcnJvclR5cGUgb2YgZWFjaCBsZXZlbDoKCQkJ
U3RyaW5nIG5lc3RlZEVycm9yVHlwZSA9IElEYXRhVXRpbC5nZXRTdHJpbmcoZGVlcGVzdE5lc3Rl
ZEVycm9yLCBFUlJPUl9JTkZPX0VSUk9SX1RZUEUpOwoJCQlTdHJpbmcgbmVzdGVkRXJyb3IgPSBJ
RGF0YVV0aWwuZ2V0U3RyaW5nKGRlZXBlc3ROZXN0ZWRFcnJvciwgRVJST1JfSU5GT19FUlJPUik7
CgoJCQkvLyB0aGUgY2FsbHN0YWNrIGlzIG9yZGVyZWQgaW52ZXJzZSEKCQkJZm9yIChpbnQgaSA9
IGNhbGxTdGFjay5sZW5ndGggLSAxIDsgaSA+PSAwOyBpLS0pIHsKCQkJCS8vIHVzZSB0aGUgc2Vy
dmljZSBuYW1lcyBvZiB0aGUgY2FsbHN0YWNrOgoJCQkJSURhdGFDdXJzb3IgY2FsbFN0YWNrQ3Vy
c29yID0gY2FsbFN0YWNrW2ldLmdldEN1cnNvcigpOwoJCQkJU3RyaW5nIHNlcnZpY2UgPSBJRGF0
YVV0aWwuZ2V0U3RyaW5nKGNhbGxTdGFja0N1cnNvciwgRVJST1JfSU5GT19DQUxMX1NUQUNLX1NF
UlZJQ0UpOwoJCQkJU3RyaW5nIGZsb3dTdGVwID0gSURhdGFVdGlsLmdldFN0cmluZyhjYWxsU3Rh
Y2tDdXJzb3IsIEVSUk9SX0lORk9fQ0FMTF9TVEFDS19GTE9XX1NURVApOwoJCQkJaWYgKGZsb3dT
dGVwID09IG51bGwgfHwgZmxvd1N0ZXAuZXF1YWxzKCIiKSkgewoJCQkJCWZsb3dTdGVwID0gIm4u
YS4iOwoJCQkJfQoJCQkJCgkJCQllcnJvckluZm9MaXN0LmFkZChuZXcgRXJyb3JJbmZvKG5lc3Rl
ZEVycm9yLCBuZXN0ZWRFcnJvclR5cGUsIHNlcnZpY2UsIGZsb3dTdGVwKSk7CgkJCX0KCQl9CgkJ
cmV0dXJuIGVycm9ySW5mb0xpc3Q7Cgl9CgkKCS8qKgoJICogR2V0cyB0aGUgZGVlcGVzdCBlcnJv
ciBpbiB0aGUgZXJyb3IgaGllcmFyY2h5CgkgKiAKCSAqIEBwYXJhbSBwRXJyb3JIaWVyYXJjaHkK
CSAqICAgICAgICAgICAgLSBhcnJheSBsaXN0IG9mIElEYXRhQ3Vyc29ycyBvbiBwdWIuZXZlbnQ6
ZXhjZXB0aW9uSW5mbwoJICogQHJldHVybiBjdXJzb3Igb2YgdGhlIGRlZXBlc3QgZXJyb3IKCSAq
LwoJcHJpdmF0ZSBzdGF0aWMgSURhdGFDdXJzb3IgZ2V0RGVlcGVzdE5lc3RlZEVycm9yKEFycmF5
TGlzdDxJRGF0YUN1cnNvcj4gcEVycm9ySGllcmFyY2h5KSB7CQkKCQkKCQlJRGF0YUN1cnNvciBu
ZXN0ZWRFcnJvciA9IHBFcnJvckhpZXJhcmNoeS5nZXQoMCk7CgkJSURhdGFDdXJzb3IgY3VycmVu
dEVycm9yID0gbnVsbDsKCQlJRGF0YSBuZXN0ZWRFcnJvcklEYXRhID0gbnVsbDsKCQlkbyB7CgkJ
CWN1cnJlbnRFcnJvciA9IG5lc3RlZEVycm9yOwoJCQluZXN0ZWRFcnJvcklEYXRhID0gSURhdGFV
dGlsLmdldElEYXRhKGN1cnJlbnRFcnJvciwgRVJST1JfSU5GT19ORVNURURfRVJST1JfSUQpOwoJ
CQlpZiAobmVzdGVkRXJyb3JJRGF0YSAhPSBudWxsKSB7CgkJCQluZXN0ZWRFcnJvciA9IG5lc3Rl
ZEVycm9ySURhdGEuZ2V0Q3Vyc29yKCk7CgkJCX0gZWxzZSB7CgkJCQluZXN0ZWRFcnJvciA9IG51
bGw7CgkJCX0KCQl9IHdoaWxlIChuZXN0ZWRFcnJvciAhPSBudWxsKTsKCgkJcmV0dXJuIGN1cnJl
bnRFcnJvcjsKCgl9CQoKCS8qcHVibGljIHN0YXRpYyBjbGFzcyBMb2cgewoJCXByaXZhdGUgc3Rh
dGljIGZpbmFsIExvZyBJTlNUQU5DRSA9IG5ldyBMb2coKTsKCQlwcml2YXRlIHN0YXRpYyBmaW5h
bCBib29sZWFuIGxvZ2dpbmcgPSBmYWxzZTsKCgkJcHVibGljIHN0YXRpYyB2b2lkIGluaXQoKSB7
CgkJCWlmIChsb2dnaW5nKSB7CgkJCQlJTlNUQU5DRS5pbml0V3JpdGVyKCk7CgkJCX0KCQl9CgkJ
cHVibGljIHN0YXRpYyB2b2lkIHdyaXRlKFN0cmluZyBwTWVzc2FnZSkgewoJCQlpZiAobG9nZ2lu
ZykgewoJCQkJSU5TVEFOQ0UubG9nKHBNZXNzYWdlKTsKCQkJfQoJCX0KCQlwdWJsaWMgc3RhdGlj
IHZvaWQgY2xvc2UoKSB7CgkJCWlmIChsb2dnaW5nKSB7CgkJCQlJTlNUQU5DRS5jbG9zZVdyaXRl
cigpOwoJCQl9CgkJfQoJCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBpc0xvZ2dpbmcoKSB7CgkJCXJl
dHVybiBsb2dnaW5nOwoJCX0KCgkJcHJpdmF0ZSBib29sZWFuIGluaXRpYWxpemVkOwoJCXByaXZh
dGUgdm9pZCBpbml0V3JpdGVyKCkgewoJCQlpbml0aWFsaXplZCA9IHRydWU7CgkJfQoJCXByaXZh
dGUgdm9pZCBjbG9zZVdyaXRlcigpIHsKCQkJaW5pdGlhbGl6ZWQgPSBmYWxzZTsKCQl9CgkJcHJp
dmF0ZSB2b2lkIGxvZyhTdHJpbmcgcE1lc3NhZ2UpIHsKCQkJaWYgKGluaXRpYWxpemVkKSB7CgkJ
CQkvLyBUT0RPOgoJCQkJLy9Mb2cubG9nVHJhY2VNZXNzYWdlKCJFSEYiLCBwTWVzc2FnZSk7CgkJ
CX0KCQl9Cgl9Ki8KCXB1YmxpYyBzdGF0aWMgY2xhc3MgRXJyb3JIYW5kbGluZ0V4Y2VwdGlvbiBl
eHRlbmRzIFJ1bnRpbWVFeGNlcHRpb24gewoJCXByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcgc2Vy
aWFsVmVyc2lvblVJRCA9IC0zOTUwMTAwNzQxNjM2NDc5NjgxTDsKCgkJcHVibGljIEVycm9ySGFu
ZGxpbmdFeGNlcHRpb24oU3RyaW5nIHBNc2csIFRocm93YWJsZSBwQ2F1c2UpIHsKCQkJc3VwZXIo
cE1zZywgcENhdXNlKTsKCQl9CgoJCXB1YmxpYyBFcnJvckhhbmRsaW5nRXhjZXB0aW9uKFN0cmlu
ZyBwTXNnKSB7CgkJCXN1cGVyKHBNc2cpOwoJCX0KCgkJcHVibGljIEVycm9ySGFuZGxpbmdFeGNl
cHRpb24oVGhyb3dhYmxlIHBDYXVzZSkgewoJCQlzdXBlcihwQ2F1c2UpOwoJCX0KCX0KCglwdWJs
aWMgc3RhdGljIGNsYXNzIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyB7CgkJLy8gT2xkIHJlcHJlc2Vu
dGF0aW9uIG9mIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyAoZGVwcmVjYXRlZCkKCQlwcml2YXRlIGZp
bmFsIExpc3Q8U3RyaW5nPiBzZXJ2aWNlTmFtZXMgPSBuZXcgQXJyYXlMaXN0PD4oKTsKCQlwcml2
YXRlIGZpbmFsIFN0cmluZyAgZXJyb3JUb0JlVGhyb3duLCB0eXBlLCBlcnJvckNvZGUsIGV4Y2Vw
dGlvblR5cGUsIG1heFJldHJ5QXR0ZW1wdHM7CgkJcHJpdmF0ZSBmaW5hbCBib29sZWFuIHByaW50
QnVzaW5lc3NPYmplY3Q7CgkJcHVibGljIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyhTdHJpbmcgcEVy
cm9yVG9CZVRocm93biwgU3RyaW5nIHBUeXBlLCBTdHJpbmcgcEVycm9yQ29kZSwKCQkJCSAJCQkJ
CSBTdHJpbmcgcEV4Y2VwdGlvblR5cGUsIFN0cmluZyBwTWF4UmV0cnlBdHRlbXB0cywKCQkJCSAJ
CQkJCSBib29sZWFuIHBQcmludEJ1c2luZXNzT2JqZWN0KSB7CgkJCWVycm9yVG9CZVRocm93biA9
IHBFcnJvclRvQmVUaHJvd247CgkJCXR5cGUgPSBwVHlwZTsKCQkJZXJyb3JDb2RlID0gcEVycm9y
Q29kZTsKCQkJZXhjZXB0aW9uVHlwZSA9IHBFeGNlcHRpb25UeXBlOwoJCQltYXhSZXRyeUF0dGVt
cHRzID0gcE1heFJldHJ5QXR0ZW1wdHM7CgkJCXByaW50QnVzaW5lc3NPYmplY3QgPSBwUHJpbnRC
dXNpbmVzc09iamVjdDsKCQl9CgoJCXB1YmxpYyBMaXN0PFN0cmluZz4gZ2V0SGFuZGxpbmdTZXJ2
aWNlcygpIHsKCQkJcmV0dXJuIHNlcnZpY2VOYW1lczsKCQl9CgoJCXB1YmxpYyB2b2lkIGFkZFNl
cnZpY2VOYW1lKFN0cmluZyBwU2VydmljZU5hbWUpIHsKCQkJc2VydmljZU5hbWVzLmFkZChwU2Vy
dmljZU5hbWUpOwoJCX0KCgkJcHVibGljIFN0cmluZyBnZXRFcnJvclRvQmVUaHJvd24oKSB7CgkJ
CXJldHVybiBlcnJvclRvQmVUaHJvd247CgkJfQoKCQlwdWJsaWMgU3RyaW5nIGdldFR5cGUoKSB7
CgkJCXJldHVybiB0eXBlOwoJCX0KCgkJcHVibGljIFN0cmluZyBnZXRFcnJvckNvZGUoKSB7CgkJ
CXJldHVybiBlcnJvckNvZGU7CgkJfQoKCQlwdWJsaWMgU3RyaW5nIGdldEV4Y2VwdGlvblR5cGUo
KSB7CgkJCXJldHVybiBleGNlcHRpb25UeXBlOwoJCX0KCgkJcHVibGljIFN0cmluZyBnZXRNYXhS
ZXRyeUF0dGVtcHRzKCkgewoJCQlyZXR1cm4gbWF4UmV0cnlBdHRlbXB0czsKCQl9CgoJCXB1Ymxp
YyBib29sZWFuIGlzUHJpbnRCdXNpbmVzc09iamVjdCgpIHsKCQkJcmV0dXJuIHByaW50QnVzaW5l
c3NPYmplY3Q7CgkJfQoKCQlAT3ZlcnJpZGUKCQlwdWJsaWMgU3RyaW5nIHRvU3RyaW5nKCkgewoJ
CQlmaW5hbCBTdHJpbmdCdWlsZGVyIHNiID0gbmV3IFN0cmluZ0J1aWxkZXIoKTsKCQkJc2IuYXBw
ZW5kKHN1cGVyLnRvU3RyaW5nKCkpOwoJCQlzYi5hcHBlbmQoIjogZXJyb3JUb0JlVGhyb3duPSAi
KTsKCQkJc2IuYXBwZW5kKGVycm9yVG9CZVRocm93bik7CgkJCXNiLmFwcGVuZCgiLCB0eXBlPSIp
OwoJCQlzYi5hcHBlbmQodHlwZSk7CgkJCXNiLmFwcGVuZCgiZXJyb3JDb2RlPSIpOwoJCQlzYi5h
cHBlbmQoZXJyb3JDb2RlKTsKCQkJc2IuYXBwZW5kKCIsIGV4Y2VwdGlvblR5cGU9Iik7CgkJCXNi
LmFwcGVuZChleGNlcHRpb25UeXBlKTsKCQkJc2IuYXBwZW5kKCIsIG1heFJldHJ5QXR0ZW1wdHM9
Iik7CgkJCXNiLmFwcGVuZChtYXhSZXRyeUF0dGVtcHRzKTsKCQkJc2IuYXBwZW5kKCIsIHByaW50
QnVzaW5lc3NPYmplY3Q9Iik7CgkJCXNiLmFwcGVuZChwcmludEJ1c2luZXNzT2JqZWN0KTsKCQkJ
c2IuYXBwZW5kKCIsIHNlcnZpY2VOYW1lcz0iKTsKCQkJLy8gVE9ETzoKCQkJLy9zYi5hcHBlbmQo
U3RyaW5ncy5hc1N0cmluZyhzZXJ2aWNlTmFtZXMpKTsKCQkJcmV0dXJuIHNiLnRvU3RyaW5nKCk7
CgkJfQoJCQoJfQoJCgkvKioKCSAqIEV4dHJhY3QgaGFuZGxpbmdzIGZvciBhbiBlcnJvciBhdCBh
IGxvY2F0aW9uIGZyb20gYSBnaXZlbiBleGNlcHRpb24KCSAqIGhhbmRsaW5nIGRlZmluaXRpb24K
CSAqIAoJICogQHBhcmFtIHBFcnJvckhhbmRsaW5nCgkgKiAgICAgICAgICAgIGRlZmluaXRpb24g
YXMgRE9NIGRvY3VtZW50IHRvIHVzZSBmb3IgZXh0cmFjdGlvbgoJICogQHBhcmFtIHBMb2NhdGlv
blhQYXRoCgkgKiAgICAgICAgICAgIGVycm9yIGxvY2F0aW9uIGFzIFhQQVRICgkgKiBAcGFyYW0g
cEV4Y2VwdGlvblR5cGUKCSAqICAgICAgICAgICAgZXJyb3IgdHlwZSBhcyBTdHJpbmcKCSAqIEBw
YXJhbSBjdXJyZW50Q2FsbGVyVHlwZQoJICogICAgICAgICAgICBjYWxsZXIgdHlwZSBhcyBTdHJp
bmcJCgkgKiBAcGFyYW0gY3VycmVudEVycm9yTWVzc2FnZQoJICogICAgICAgICAgICBvcmlnaW5h
bCBlcnJvciBhcyBTdHJpbmcgCgkgKiBAcmV0dXJuIGFsbCBmb3VuZCBoYW5kbGluZ3MgZm9yIHRo
ZSBnaXZlbiBlcnJvciBhcyBhbiBhcnJheSBsaXN0LCBlbXB0eQoJICogICAgICAgICBsaXN0IGlu
IGNhc2Ugb2Ygbm8gZm91bmQgZXJyb3IKCSAqIEB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbgoJICov
CglAU3VwcHJlc3NXYXJuaW5ncygidW5jaGVja2VkIikKCXByaXZhdGUgc3RhdGljIEV4Y2VwdGlv
bkhhbmRsaW5nSW5mbyBnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbigKCQkJRG9jdW1lbnQgcEVycm9y
SGFuZGxpbmcsIFN0cmluZyBwTG9jYXRpb25YUGF0aCwKCQkJU3RyaW5nIHBFeGNlcHRpb25UeXBl
LCBTdHJpbmcgY3VycmVudENhbGxlclR5cGUsIFN0cmluZyBjdXJyZW50RXJyb3JNZXNzYWdlKQoJ
CQl0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CgkJbG9nRGVidWcoImdldEhhbmRsaW5nc0Zvckxv
Y2F0aW9uOiAtLT4gIiArIHBMb2NhdGlvblhQYXRoICsgIiwgIiArIHBFeGNlcHRpb25UeXBlICsg
IiwgIiArIGN1cnJlbnRDYWxsZXJUeXBlICsgIiwgIiArIGN1cnJlbnRFcnJvck1lc3NhZ2UpOwoK
CQkvLyBnZXQgZXhjZXB0aW9uIGxpc3QgZm9yIGxvY2F0aW9uCgkJTGlzdDxFbGVtZW50PiBleGNl
cHRpb25Ob2RlcyA9IG51bGw7CgkJdHJ5IHsKCQkJZXhjZXB0aW9uTm9kZXMgPSAoTGlzdDxFbGVt
ZW50PikgWFBhdGguc2VsZWN0Tm9kZXMocEVycm9ySGFuZGxpbmcsIHBMb2NhdGlvblhQYXRoKTsK
CQl9IAoJCWNhdGNoIChKRE9NRXhjZXB0aW9uIGUpIHsKCQkJbG9nRXJyb3IoIkpET00gRXJyb3Ig
ZHVyaW5nIGV4dHJhY3Rpb24gb2YgZXJyb3IgdHlwZXMgZnJvbSBleGNlcHRpb24gaGFuZGxpbmcg
ZGVmaW5pdGlvbjogIiArIGUuZ2V0TWVzc2FnZSgpKTsKCQkJbG9nRGVidWcoImdldEhhbmRsaW5n
c0ZvckxvY2F0aW9uOiA8LS0gbnVsbCAoSkRPTUV4Y2VwdGlvbjogIiArIGUuZ2V0TWVzc2FnZSgp
ICsgIikiKTsKCQkJcmV0dXJuIG51bGw7CgkJfQogICAgICAgIC8vIGNoZWNrIGV4Y2VwdGlvbiBu
b2RlcyBzYW5pdHkKCQlpZiAoZXhjZXB0aW9uTm9kZXMgPT0gbnVsbCB8fCBleGNlcHRpb25Ob2Rl
cy5pc0VtcHR5KCkpIHsKCQkJbG9nRGVidWcoImdldEhhbmRsaW5nc0ZvckxvY2F0aW9uOiA8LS0g
bnVsbCAoTm8gZXhjZXB0aW9uTm9kZXMpIik7CgkJCXJldHVybiBudWxsOwoJCX0JCQkKCQkKCQkv
LyBleHRyYWN0IGV4Y2VwdGlvbnMgZnJvbSBsaXN0LCBpZiBsb2NhdGlvbiBleGlzdHMgYW5kIGV4
Y2VwdGlvbgoJCS8vIGRlZmluaXRpb25zIGFyZSBjb250YWluZWQKCQkvLyBpdGVyYXRpb24gb3Zl
ciBhbGwgZGVmaW5lZCBleGNlcHRpb25zIGluIGxvY2F0aW9uCgkJRXhjZXB0aW9uSGFuZGxpbmdJ
bmZvIGV4Y2VwdGlvbkhhbmRsaW5nSW5mbyA9IG51bGw7CgkJRWxlbWVudCBleGNlcHRpb25IYW5k
bGluZ0VsZW1lbnQgPSBudWxsOwoJCWZvciAoRWxlbWVudCBleGNlcHRpb25Ob2RlIDogZXhjZXB0
aW9uTm9kZXMpIHsKCQkJYm9vbGVhbiBpc0Vycm9yTWVzc2FnZUNvbnRhaW5zQ2hlY2tUcnVlID0g
ZmFsc2U7CgkJCWZpbmFsIFN0cmluZyBlcnJvck1lc3NhZ2VDb250YWluc0Zyb21EZWZpbml0aW9u
ID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9SX01F
U1NBR0VfQ09OVEFJTlMpOwoJCQlpZiAoZXJyb3JNZXNzYWdlQ29udGFpbnNGcm9tRGVmaW5pdGlv
biA9PSBudWxsIHx8CgkJCQkoY3VycmVudEVycm9yTWVzc2FnZSAhPSBudWxsICYmCgkJCQllcnJv
ck1lc3NhZ2VDb250YWluc0Zyb21EZWZpbml0aW9uICE9IG51bGwgJiYKCQkJCWN1cnJlbnRFcnJv
ck1lc3NhZ2UuY29udGFpbnMoZXJyb3JNZXNzYWdlQ29udGFpbnNGcm9tRGVmaW5pdGlvbikpKSAK
CQkJewoJCQkJaXNFcnJvck1lc3NhZ2VDb250YWluc0NoZWNrVHJ1ZSA9IHRydWU7CgkJCX0KCgkJ
CS8vIENoZWNrIGZvciBvcHRpb25hbCBhdHRyaWJ1dCBlcnJvck1lc3NhZ2VSZWdleDoKCQkJYm9v
bGVhbiBpc0Vycm9yTWVzc2FnZVJlZ2V4Q2hlY2tUcnVlID0gZmFsc2U7CgkJCWZpbmFsIFN0cmlu
ZyBlcnJvck1lc3NhZ2VSZWdleEZyb21EZWZpbml0aW9uID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRy
aWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9SX01FU1NBR0VfUkVHRVhfSUQpOwoJCQlpZiAo
ZXJyb3JNZXNzYWdlUmVnZXhGcm9tRGVmaW5pdGlvbiA9PSBudWxsIHx8CgkJCQkoY3VycmVudEVy
cm9yTWVzc2FnZSAhPSBudWxsICYmCgkJCQllcnJvck1lc3NhZ2VSZWdleEZyb21EZWZpbml0aW9u
ICE9IG51bGwgJiYKCQkJCWN1cnJlbnRFcnJvck1lc3NhZ2UubWF0Y2hlcyhlcnJvck1lc3NhZ2VS
ZWdleEZyb21EZWZpbml0aW9uKSkpIAoJCQl7CgkJCQlpc0Vycm9yTWVzc2FnZVJlZ2V4Q2hlY2tU
cnVlID0gdHJ1ZTsKCQkJfQoJCQkKCQkJLy8gQ2hlY2sgZm9yIG9wdGlvbmFsIGF0dHJpYnV0IGNh
bGxlclR5cGU6CgkJCWJvb2xlYW4gaXNDYWxsZXJUeXBlQ2hlY2tUcnVlID0gZmFsc2U7CgkJCWZp
bmFsIFN0cmluZyBjYWxsZXJUeXBlRnJvbURlZmluaXRpb24gPSBleGNlcHRpb25Ob2RlLmdldEF0
dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfQ0FMTEVSX1RZUEVfSUQpOwoJCQlpZiAo
Y2FsbGVyVHlwZUZyb21EZWZpbml0aW9uID09IG51bGwgfHwKCQkJCShjdXJyZW50Q2FsbGVyVHlw
ZSAhPSBudWxsICYmCgkJCQljYWxsZXJUeXBlRnJvbURlZmluaXRpb24gIT0gbnVsbCAmJgoJCQkJ
Y3VycmVudENhbGxlclR5cGUuZXF1YWxzKGNhbGxlclR5cGVGcm9tRGVmaW5pdGlvbikpKSAKCQkJ
ewoJCQkJaXNDYWxsZXJUeXBlQ2hlY2tUcnVlID0gdHJ1ZTsKCQkJfQoJCQkKCQkJLy8gaWYgZGVm
aW5lZCBleGNlcHRpb24gdHlwZSBlcXVhbHMgZXhjZXB0aW9uLCBzZXQgaGFuZGxpbmcgYW5kCgkJ
CS8vIGV4aXQgbG9vcAoJCQlmaW5hbCBTdHJpbmcgZXhjZXB0aW9uVHlwZUZyb21EZWZpbml0aW9u
ID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9SX1RZ
UEVfSUQpOwoJCQlpZiAoZXhjZXB0aW9uVHlwZUZyb21EZWZpbml0aW9uLmVxdWFscyhwRXhjZXB0
aW9uVHlwZSkgJiYgaXNFcnJvck1lc3NhZ2VDb250YWluc0NoZWNrVHJ1ZSAmJiBpc0Vycm9yTWVz
c2FnZVJlZ2V4Q2hlY2tUcnVlICYmIGlzQ2FsbGVyVHlwZUNoZWNrVHJ1ZSkgewoJCQkJZXhjZXB0
aW9uSGFuZGxpbmdJbmZvID0gZ2V0UmV0VmFsKGV4Y2VwdGlvbk5vZGUsIHBFeGNlcHRpb25UeXBl
KTsKCQkJCWV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9IGV4Y2VwdGlvbk5vZGU7CgkJCQlicmVh
azsKCQkJfQkKCQkJICAKCQkJLy8gaWYgZ2VuZXJpYyBoYW5kbGluZyBpcyBhbGxvd2VkIGFuZCBk
ZWZpbmVkICh0eXBlPSJhbGwiKSwgc2V0IChjYWNoZSkKCQkJLy8gZ2VuZXJpYyBoYW5kbGluZwoJ
CQllbHNlIGlmIChleGNlcHRpb25UeXBlRnJvbURlZmluaXRpb24uZXF1YWxzKEVIRF9WQUxVRV9H
RU5FUklDX0VSUk9SX1RZUEVfSUQpICYmIGlzRXJyb3JNZXNzYWdlQ29udGFpbnNDaGVja1RydWUg
JiYgaXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSAmJiBpc0NhbGxlclR5cGVDaGVja1RydWUp
IHsKCQkJCWV4Y2VwdGlvbkhhbmRsaW5nSW5mbyA9IGdldFJldFZhbChleGNlcHRpb25Ob2RlLCBw
RXhjZXB0aW9uVHlwZSk7CgkJCQlleGNlcHRpb25IYW5kbGluZ0VsZW1lbnQgPSBleGNlcHRpb25O
b2RlOwoJCQkJYnJlYWs7CgkJCX0KCQl9CgoJCWlmIChleGNlcHRpb25IYW5kbGluZ0VsZW1lbnQg
PT0gbnVsbCkgewoJCQlyZXR1cm4gbnVsbDsKCQl9IGVsc2UgewoJCQkvLyBjaGVjayBoYW5kbGlu
ZyBub2RlcyBzYW5pdHkKCQkJZm9yIChPYmplY3QgbiA6IGV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVu
dC5nZXRDaGlsZHJlbihFSERfQVRUUklCVVRFX0hBTkRMSU5HKSkgewoJCQkJCWV4Y2VwdGlvbkhh
bmRsaW5nSW5mby5hZGRTZXJ2aWNlTmFtZSgoKEVsZW1lbnQpIG4pLmdldFRleHQoKSk7CgkJCX0K
CgkJCWxvZ0RlYnVnKCJnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbjogPC0tICIgKyBleGNlcHRpb25I
YW5kbGluZ0luZm8pOwoJCQlyZXR1cm4gZXhjZXB0aW9uSGFuZGxpbmdJbmZvOwoJCX0KCQkKCX0K
CQoJcHJpdmF0ZSBzdGF0aWMgRXhjZXB0aW9uSGFuZGxpbmdJbmZvIGdldFJldFZhbChFbGVtZW50
IGV4Y2VwdGlvbk5vZGUsIFN0cmluZyBleGNlcHRpb25UeXBlKSB7CQoJCWZpbmFsIFN0cmluZyBl
cnJvclRvQmVUaHJvd24gPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRS
SUJVVEVfRVJST1JfVE9fQkVfVEhST1dOX0lEKTsKCQlmaW5hbCBTdHJpbmcgdHlwZSA9IGV4Y2Vw
dGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9FUlJPUl9UWVBFX0lEKTsK
CQlmaW5hbCBTdHJpbmcgZXhjZXB0aW9uSGFuZGxpbmdJZCA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0
cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9FUlJPUl9IQU5ETElOR19JRF9JRCk7CgkJZmluYWwg
U3RyaW5nIG1heFJldHJ5QXR0ZW1wdHMgPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVl
KEVIRF9BVFRSSUJVVEVfTUFYX1JFVFJZX0FUVEVNUFRTKTsKCQlmaW5hbCBTdHJpbmcgcHJpbnRC
dXNpbmVzc09iamVjdFN0ciA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX1BS
SU5UX0JVU0lORVNTX09CSkVDVF9JRCk7CgkJZmluYWwgYm9vbGVhbiBwcmludEJ1c2luZXNzT2Jq
ZWN0ID0gcHJpbnRCdXNpbmVzc09iamVjdFN0ciA9PSBudWxsID8gZmFsc2UgOiBCb29sZWFuLnBh
cnNlQm9vbGVhbihwcmludEJ1c2luZXNzT2JqZWN0U3RyKTsKCQlyZXR1cm4gbmV3IEV4Y2VwdGlv
bkhhbmRsaW5nSW5mbyhlcnJvclRvQmVUaHJvd24sIHR5cGUsIGV4Y2VwdGlvbkhhbmRsaW5nSWQs
IGV4Y2VwdGlvblR5cGUsIG1heFJldHJ5QXR0ZW1wdHMsIHByaW50QnVzaW5lc3NPYmplY3QpOwoJ
fQoJCgoJcHJpdmF0ZSBzdGF0aWMgSURhdGEgYnVpbGRDb21wYWN0RXJyb3JJbmZvKFN0cmluZyBw
RXJyb3JMb2NhdGlvbiwgU3RyaW5nIGZsb3dTdGVwKSB7CgkJSURhdGEgY29tcGFjdEVycm9ySW5m
byA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCQlJRGF0YUN1cnNvciBjb21wYWN0RXJyb3JJbmZv
Q3Vyc29yID0gY29tcGFjdEVycm9ySW5mby5nZXRDdXJzb3IoKTsKCgkJSURhdGFVdGlsLnB1dChj
b21wYWN0RXJyb3JJbmZvQ3Vyc29yLCBDT01QQUNUX0VSUk9SX0xPQ0FUSU9OX0lELCBwRXJyb3JM
b2NhdGlvbik7CgkJSURhdGFVdGlsLnB1dChjb21wYWN0RXJyb3JJbmZvQ3Vyc29yLCBDT01QQUNU
X0VSUk9SX0ZMT1dfU1RFUCwgZmxvd1N0ZXApOwoKCQljb21wYWN0RXJyb3JJbmZvQ3Vyc29yLmRl
c3Ryb3koKTsKCgkJcmV0dXJuIGNvbXBhY3RFcnJvckluZm87Cgl9CgkJCglAU3VwcHJlc3NXYXJu
aW5ncygicmF3dHlwZXMiKQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTlNTZXJ2aWNlIGdldEN1cnJl
bnRUb3BMZXZlbFNlcnZpY2UoKSB7CgkJTlNTZXJ2aWNlIHRvcExldmVsU2VydmljZU5hbWUgPSBu
dWxsOwoJCUludm9rZVN0YXRlIHN0YXRlID0gSW52b2tlU3RhdGUuZ2V0Q3VycmVudFN0YXRlKCk7
CgkJaWYgKHN0YXRlICE9IG51bGwpIHsKCQkJU3RhY2sgY2FsbFN0YWNrID0gc3RhdGUuZ2V0Q2Fs
bFN0YWNrKCk7CgkJCWlmIChjYWxsU3RhY2sgIT0gbnVsbCAmJiBjYWxsU3RhY2suc2l6ZSgpID4g
MCkgewoJCQkJdG9wTGV2ZWxTZXJ2aWNlTmFtZSA9IChOU1NlcnZpY2UpIGNhbGxTdGFjay5lbGVt
ZW50QXQoMCk7CgkJCX0KCQl9CgkJcmV0dXJuIHRvcExldmVsU2VydmljZU5hbWU7Cgl9CgkKCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBnZXRNZXNzYWdlVUlEKElEYXRhIG1ldGFEYXRhKSB7
CgkJaWYobWV0YURhdGEgIT0gbnVsbCkgewoJCQlJRGF0YU1hcCBtZXRhRGF0YU1hcCA9IG5ldyBJ
RGF0YU1hcChtZXRhRGF0YSk7CgkJCXJldHVybiBtZXRhRGF0YU1hcC5nZXRBc1N0cmluZyhVSURf
SUQpOwoJCX0KCQlyZXR1cm4gbnVsbDsKCX0KCglwdWJsaWMgc3RhdGljIHZvaWQgaW5pdEhhbmRs
aW5ncyhVUkwgcFVybCwgU0FYQnVpbGRlciBwQnVpbGRlcikgewoJCWZpbmFsIFNBWEJ1aWxkZXIg
YnVpbGRlcjsKCQlpZiAocEJ1aWxkZXIgPT0gbnVsbCkgewoJCQlidWlsZGVyID0gbmV3IFNBWEJ1
aWxkZXIoKTsKCQl9IGVsc2UgewoJCQlidWlsZGVyID0gcEJ1aWxkZXI7CgkJfQoJCWZpbmFsIERv
Y3VtZW50IGRvYyA9IGxvYWRIYW5kbGluZ3MocFVybCwgYnVpbGRlcik7CgkJc3luY2hyb25pemVk
KGV4Y2VwdGlvbkhhbmRsaW5nTG9jaykgewoJCQlfZXhjZXB0aW9uSGFuZGxpbmcgPSBkb2M7CgkJ
fQoJfQoJCglwcml2YXRlIHN0YXRpYyBEb2N1bWVudCBsb2FkSGFuZGxpbmdzKFVSTCBwRmlsZSwg
U0FYQnVpbGRlciBwQnVpbGRlcikgewoJCS8vIExvYWQgZXhjZXB0aW9uIGhhbmRsaW5nIGRlZmlu
aXRpb24gZmlsZQoJCQoJCXRyeSB7CgkJCWZpbmFsIERvY3VtZW50IGVoZCA9IHBCdWlsZGVyLmJ1
aWxkKHBGaWxlKTsKCQkKCQkJbG9nSW5mbygiU3VjY2Vzc2Z1bGx5IGluaXRpYWxpemVkIGVycm9y
IGhhbmRsaW5nIik7CgkJCXJldHVybiBlaGQ7CgkJfSAKCQljYXRjaCAoSkRPTUV4Y2VwdGlvbiBl
KSB7CgkJCWxvZ0Vycm9yKCJKRE9NIEVycm9yIGR1cmluZyBpbml0aWFsaXphdGlvbiBvZiBlcnJv
ciBoYW5kbGluZzogIiArIGUuZ2V0TWVzc2FnZSgpKTsKCQkJdGhyb3cgbmV3IFVuZGVjbGFyZWRU
aHJvd2FibGVFeGNlcHRpb24oZSk7CgkJfSAKCQljYXRjaCAoSU9FeGNlcHRpb24gZSkgewoJCQls
b2dFcnJvcigiSU8gRXJyb3IgZHVyaW5nIGluaXRpYWxpemF0aW9uIG9mIGVycm9yIGhhbmRsaW5n
OiAiICsgZS5nZXRNZXNzYWdlKCkpOwoJCQl0aHJvdyBuZXcgVW5kZWNsYXJlZFRocm93YWJsZUV4
Y2VwdGlvbihlKTsKCQl9Cgl9CgoKCXByaXZhdGUgc3RhdGljIFN0cmluZyBhc1N0cmluZyhTdHJp
bmdbXSB0ZW1wUGFydHMpIHsKCQlTdHJpbmdCdWlsZGVyIGJ1aWxkZXIgPSBuZXcgU3RyaW5nQnVp
bGRlcigpOwoJCWZvciAoU3RyaW5nIHN0cmluZyA6IHRlbXBQYXJ0cykgewoJCQlidWlsZGVyLmFw
cGVuZChzdHJpbmcpLmFwcGVuZCgiLCIpOwoJCX0KCQlyZXR1cm4gYnVpbGRlci50b1N0cmluZygp
OwoJfQoKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBMT0dfU1ZDX1BBVEggPSAid3gucmVz
aWxpZW5jZS5pbXBsLmxvZyI7CgoJcHVibGljIHN0YXRpYyB2b2lkIGxvZ0luZm8oU3RyaW5nIG1l
c3NhZ2UpIHsKCQlsb2dJbXBsKG1lc3NhZ2UsICJJbmZvIik7Cgl9CgkKCXB1YmxpYyBzdGF0aWMg
dm9pZCBsb2dXYXJuKFN0cmluZyBtZXNzYWdlKSB7CgkJbG9nSW1wbChtZXNzYWdlLCAiV2FybiIp
OwoJfQoJCglwdWJsaWMgc3RhdGljIHZvaWQgbG9nRXJyb3IoU3RyaW5nIG1lc3NhZ2UpIHsKCQls
b2dJbXBsKG1lc3NhZ2UsICJFcnJvciIpOwoJfQoKCXB1YmxpYyBzdGF0aWMgdm9pZCBsb2dUcmFj
ZShTdHJpbmcgbWVzc2FnZSkgewoJCWxvZ0ltcGwobWVzc2FnZSwgIlRyYWNlIik7Cgl9CgkKCXB1
YmxpYyBzdGF0aWMgdm9pZCBsb2dEZWJ1ZyhTdHJpbmcgbWVzc2FnZSkgewoJCWxvZ0ltcGwobWVz
c2FnZSwgIkRlYnVnIik7Cgl9CgkKCXB1YmxpYyBzdGF0aWMgdm9pZCBsb2dGYXRhbChTdHJpbmcg
bWVzc2FnZSkgewoJCWxvZ0ltcGwobWVzc2FnZSwgIkZhdGFsIik7Cgl9CgkKCXByaXZhdGUgc3Rh
dGljIHZvaWQgbG9nSW1wbChTdHJpbmcgbWVzc2FnZSwgU3RyaW5nIGxldmVsKSB7CgkJSURhdGEg
aW5wdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJSURhdGFNYXAgaW5wdXRNYXAgPSBuZXcg
SURhdGFNYXAoaW5wdXQpOwoJCWlucHV0TWFwLnB1dCgibWVzc2FnZSIsIG1lc3NhZ2UpOwoJCWlu
cHV0TWFwLnB1dCgiZnVuY3Rpb24iLCBXWF9SRVNJTElFTkNFX0VSUk9SKTsKCQlpbnB1dE1hcC5w
dXQoImxldmVsIiwgbGV2ZWwpOwoJCQoJCXRyeSB7CgkJCVNlcnZpY2UuZG9JbnZva2UoTE9HX1NW
Q19QQVRILCAibG9nIiwgaW5wdXQpOwoJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CgkJCWRlYnVn
TG9nSW5mbygiRXJyb3IgaW4gbG9nSW1wbDogIiArIGUuZ2V0TG9jYWxpemVkTWVzc2FnZSgpKTsK
CQl9Cgl9CgoJcHJpdmF0ZSBzdGF0aWMgdm9pZCBkZWJ1Z0xvZ0luZm8oU3RyaW5nIG1lc3NhZ2Up
IHsKCSAgICBKb3VybmFsTG9nZ2VyLmxvZyg0LCAgSm91cm5hbExvZ2dlci5GQUNfRkxPV19TVkMs
IEpvdXJuYWxMb2dnZXIuSU5GTywgV1hfUkVTSUxJRU5DRV9FUlJPUiwgbWVzc2FnZSk7Cgl9CgoJ
Ly8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tWE1MIE5PREUgTkFNRSBERUZJ
TklUSU9OUy0tLS0tLS0tLS0tLS0tLS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgU3RyaW5nIEVIRF9OT0RFX0RPQ19ST09UX0lEID0gImV4Y2VwdGlvbkhhbmRsaW5n
IjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfTk9ERV9HTE9CQUxfRVJST1JfVFlQ
RV9JRCA9ICJnbG9iYWxFeGNlcHRpb24iOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVI
RF9OT0RFX0VSUk9SX0xPQ0FUSU9OX0lEID0gImxvY2F0aW9uIjsKCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBFSERfTk9ERV9FUlJPUl9UWVBFX0lEID0gImV4Y2VwdGlvbiI7CgoJLy8gKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RFIEFUVFJJQlVURSBERUZJTklU
SU9OUy0tLS0tLS0tLS0tLS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfVFlQRV9JRCA9ICJ0eXBlIjsKCXByaXZhdGUg
c3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX0NBTExFUl9UWVBFX0lEID0g
ImNhbGxlclR5cGUiOwkJCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVU
RV9FUlJPUl9NRVNTQUdFX0NPTlRBSU5TID0gImVycm9yTWVzc2FnZUNvbnRhaW5zIjsJCQoJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfTUVTU0FHRV9SRUdF
WF9JRCA9ICJlcnJvck1lc3NhZ2VSZWdleCI7CQkKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBFSERfQVRUUklCVVRFX0xPQ0FUSU9OX05BTUVfSUQgPSAibmFtZSI7Cglwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9FUlJPUl9UT19CRV9USFJPV05fSUQgPSAiZXJy
b3JUb0JlVGhyb3duIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRF
X0VSUk9SX0hBTkRMSU5HX0lEX0lEID0gImV4Y2VwdGlvbkhhbmRsaW5nSWQiOwoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfSEFORExJTkc9ICJoYW5kbGluZyI7Cglw
cml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1Q
VFMgPSAibWF4UmV0cnlBdHRlbXB0cyI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhE
X0FUVFJJQlVURV9SRVRSWV9DT1VOVCA9ICJyZXRyeUNvdW50IjsKCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0ZVTkNUSU9OID0gIkBXeHhSZXNpbGllbmNlLmxvZ2dp
bmcuZnVuY3Rpb25AIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfUFJJTlRfQlVT
SU5FU1NfT0JKRUNUX0lEID0gInByaW50QnVzaW5lc3NPYmplY3QiOwoKCS8vICoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioK
CS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RFIFZBTFVFIERFRklOSVRJT05TLS0tLS0t
LS0tLS0tLS0tLS0tLS0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBFSERfVkFMVUVfR0VORVJJQ19FUlJPUl9UWVBFX0lEID0gImFsbCI7Cglwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgRUhEX1ZBTFVFX0dMT0JBTF9FUlJPUl9IQU5ETElOR19JRCA9ICJnbG9i
YWwiOwoKCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKCS8vIC0tLS0tLS0tLS0tLS0tLS0tLUlOUFVUIEVSUk9SIEZJ
RUxEIElEIERFRklOSVRJT05TLS0tLS0tLS0tLS0tLS0tLS0KCS8vICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCXByaXZh
dGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0lEID0gImV4Y2VwdGlvbkluZm8iOwoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVYQ0xVREVfU0VSVklDRSA9ICJAV3h4UmVzaWxp
ZW5jZS5lcnJvckhhbmRsaW5nLmV4Y2x1ZGVTZXJ2aWNlRnJvbUVycm9ySGFuZGxpbmdAIjsKCQoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fRVJST1IgPSAiZXJyb3IiOwoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fRVJST1JfVFlQRSA9ICJlcnJv
clR5cGUiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fQ0FMTF9TVEFD
S19TRVJWSUNFID0gInNlcnZpY2UiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9S
X0lORk9fQ0FMTF9TVEFDS19GTE9XX1NURVAgPSAiZmxvd1N0ZXAiOwoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fQ0FMTF9TVEFDSyA9ICJjYWxsU3RhY2siOwoJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fRVJST1JfRFVNUCA9ICJlcnJvckR1bXAi
OwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fVElNRSA9ICJ0aW1lIjsK
CXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX05FU1RFRF9FUlJPUl9JRCA9
ICJuZXN0ZWRFcnJvckluZm8iOwoKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBHRU5FUklD
X1ZBTFVFX01BUF9JRCA9ICJnZW5lcmljVmFsdWVNYXAiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
U3RyaW5nIEdFTkVSSUNfRVJST1JfTUVTU0FHRV9JRCA9ICJnZW5lcmljRXJyb3JNZXNzYWdlIjsK
CgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCgkvLyAtLS0tLS0tLS0tLS0tLU9VVFBVVCBIQU5ETEVEIEVSUk9SIEZJ
RUxEIElEIERFRklOSVRJT05TLS0tLS0tLS0tLS0tCgkvLyAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCglwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0lEID0gImhhbmRsZWRFcnJvcklu
Zm8iOwoJCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX1JP
T1RfSUQgPSAidG9wU2VydmljZUVycm9yIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBI
QU5ETEVEX0VSUk9SX0lORk9fSEFORExFRF9JRCA9ICJoYW5kbGVkU2VydmljZUVycm9yIjsKCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fQVBQTElDQVRJT05f
U0VSVklDRV9JRCA9ICJhcHBsaWNhdGlvblNlcnZpY2VFcnJvciI7Cglwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX09SSUdJTl9JRCA9ICJyb290U2VydmljZUVy
cm9yIjsKCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0hB
TkRMSU5HX0xPQ0FUSU9OX0lEID0gImhhbmRsaW5nTG9jYXRpb24iOwoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19IQU5ETElOR19UWVBFX0lEID0gImhhbmRs
aW5nVHlwZSI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZP
X0RFUFRIX0lEID0gImVycm9yRGVwdGgiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhB
TkRMRURfRVJST1JfSU5GT19FUlJPUl9DT0RFID0gImVycm9yQ29kZSI7Cglwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0NBTExfU1RBQ0sgPSAiY2FsbFN0YWNr
IjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fRVJST1Jf
RFVNUCA9ICJlcnJvckR1bXAiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURf
RVJST1JfSU5GT19USU1FID0gInRpbWUiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhB
TkRMRURfRVJST1JfSU5GT19QSVBFTElORSA9ICJwaXBlbGluZSI7CgoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEVSUk9SX01TR19JRCA9ICJlcnJvck1lc3NhZ2UiOwoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgU3RyaW5nIENPTVBBQ1RfRVJST1JfTE9DQVRJT05fSUQgPSAiZXJyb3JMb2NhdGlv
biI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgQ09NUEFDVF9FUlJPUl9GTE9XX1NURVAg
PSAiZXJyb3JGbG93U3RlcCI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfVFlQ
RV9JRCA9ICJlcnJvclR5cGUiOwoKCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCS8vIC0tLS0tLS0tLS0tLS0tLS0t
LS1HRU5FUklDIERPQyBGSUVMRCBJRCBERUZJTklUSU9OUy0tLS0tLS0tLS0tLS0tLS0KCS8vICoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBCVVNJTkVTU19ET0NfSUQgPSAi
YnVzaW5lc3NPYmplY3QiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFBSSU5UX0JVU0lO
RVNTX09CSkVDVF9JRCA9ICJwcmludEJ1c2luZXNzT2JqZWN0IjsKCgkvLyAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkv
LyAtLS0tLS0tLS0tLS0tLS0tLS0tLUVYQ0VQVElPTiBIQU5ETElORyBERUZJTklUSU9OLS0tLS0t
LS0tLS0tLS0tLS0tCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
TUVUQURBVEFfSUQgPSAid3hNZXRhRGF0YSI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
TE9HR0lOR19GVU5DVElPTiA9ICJAV3h4UmVzaWxpZW5jZS5sb2dnaW5nLmZ1bmN0aW9uQCI7Cglw
cml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgVUlEX0lEID0gInV1aWQiOwoKCS8vICoqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioKCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tRVhDRVBUSU9OIEhBTkRMSU5HIERFRklOSVRJT04t
LS0tLS0tLS0tLS0tLS0tLS0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCXByaXZhdGUgc3RhdGljIERvY3VtZW50
IF9leGNlcHRpb25IYW5kbGluZzsKCXByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVjdCBleGNlcHRp
b25IYW5kbGluZ0xvY2sgPSBuZXcgT2JqZWN0KCk7Cglwcml2YXRlIHN0YXRpYyBFeGNlcHRpb25I
YW5kbGluZ0xpc3RlbmVyIF9leGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyOwoJcHJpdmF0ZSBzdGF0
aWMgQ2FsbGVyVHlwZVN1cHBsaWVyIERFRkFVTFRfQ0FMTEVSX1RZUEVfU1VQUExJRVIgPSBuZXcg
Q2FsbGVyVHlwZVN1cHBsaWVyKCkgewoJCUBPdmVycmlkZQoJCXB1YmxpYyBTdHJpbmcgZ2V0KCkg
ewoJCQlyZXR1cm4gZ2V0Q2FsbGVyVHlwZUJ5Q2FsbGluZ1NlcnZpY2UoKTsKCQl9Cgl9OwoJcHJp
dmF0ZSBzdGF0aWMgQ2FsbGVyVHlwZVN1cHBsaWVyIGNhbGxlclR5cGVTdXBwbGllciA9IG51bGw7
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBPYmplY3QgY2FsbGVyVHlwZVN1cHBsaWVyTG9jayA9IG5l
dyBPYmplY3QoKTsKCXByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVjdCBleGNlcHRpb25IYW5kbGlu
Z0xpc3RlbmVyTG9jayA9IG5ldyBPYmplY3QoKTsKCXByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVj
dCBjcmVhdGVTdW1tYXJpemVkRXhjZXB0aW9uSGFuZGxpbmdMb2NrID0gbmV3IE9iamVjdCgpOwoJ
Ly8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1JTlBVVCBHRVQgVkFMVUUgREVG
SU5JVElPTi0tLS0tLS0tLS0tLS0tLS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgU3RyaW5nIE1BWF9SRVRSWV9BVFRFTVBUU19CRUZPUkVfQ0FOQ0VMX1JFVFJZID0g
Im1heFJldHJ5QXR0ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeSI7Cglwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgQlJFQUtfUkVUUllfTE9PUCA9ICJicmVhay5yZXRyeS5sb29wLmZvci4iOwoJLy8g
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1FUlJPUiBWQUxVRSBERUZJTklUSU9O
LS0tLS0tLS0tLS0tLS0tLS0tLS0tCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCglwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgRVJST1JfVFJBTlNJRU5UID0gIlRSQU5TSUVOVCI7Cglwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgRVJST1JfRkFUQUwgPSAiRkFUQUwiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
U3RyaW5nIEVSUk9SX05PTkUgPSAiTk9ORSI7CQoJCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJp
bmcgU1VNTUFSSVpFRF9FWENFUFRJT05fSEFORExJTkdfRklMRSA9ICJFeGNlcHRpb25IYW5kbGlu
Z1N1bW1hcml6ZWQueG1sIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFWENFUFRJT05f
SEFORExJTkdfWFNEX0ZJTEUgPSAiRXhjZXB0aW9uSGFuZGxpbmcueHNkIjsKCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBXWF9SRVNJTElFTkNFID0gIld4eFJlc2lsaWVuY2UiOwoJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFdYX1JFU0lMSUVOQ0VfRVJST1IgPSAiV3h4UmVzaWxpZW5j
ZS5FcnJvciI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSEFORExJTkdfWE1M
X0ZJTEUgPSAiRXhjZXB0aW9uSGFuZGxpbmcueG1sIjsKCgoJCgkKCQoJCgkKCQoJCgkKCQoJ</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.wm.util.JournalLogger</value>
    <value>com.softwareag.util.IDataMap</value>
    <value>com.wm.app.audit.IAuditRuntime</value>
    <value>wx.resilience.impl.ErrorInfo</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler.Creator</value>
    <value>wx.resilience.impl.Exceptions</value>
    <value>wx.resilience.impl.Paths</value>
    <value>com.wm.lang.ns.NSName</value>
    <value>java.io.File</value>
    <value>java.io.IOException</value>
    <value>java.util.*</value>
    <value>javax.xml.transform.Source</value>
    <value>javax.xml.transform.stream.StreamSource</value>
    <value>javax.xml.validation.Schema</value>
    <value>javax.xml.validation.SchemaFactory</value>
    <value>javax.xml.validation.Validator</value>
    <value>org.jdom.Document</value>
    <value>org.jdom.Element</value>
    <value>org.jdom.JDOMException</value>
    <value>org.jdom.input.SAXBuilder</value>
    <value>org.jdom.xpath.XPath</value>
    <value>org.xml.sax.SAXException</value>
    <value>com.wm.app.b2b.server.*</value>
    <value>java.lang.reflect.UndeclaredThrowableException</value>
    <value>java.net.URL</value>
    <value>java.nio.file.Path</value>
    <value>com.wm.lang.ns.NSService</value>
  </array>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
</Values>
