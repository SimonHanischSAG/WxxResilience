<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">QEZ1bmN0aW9uYWxJbnRlcmZhY2UNCnB1YmxpYyBzdGF0aWMgaW50ZXJmYWNlIEV4Y2VwdGlvbkhh
bmRsaW5nTGlzdGVuZXIgew0KCXB1YmxpYyB2b2lkIGFjY2VwdChTdHJpbmcgcFNlcnZpY2VOYW1l
LCBJRGF0YSBwUGlwZWxpbmUpIHRocm93cyBVbmtub3duU2VydmljZUV4Y2VwdGlvbjsNCn0NCg0K
QEZ1bmN0aW9uYWxJbnRlcmZhY2UNCnB1YmxpYyBzdGF0aWMgaW50ZXJmYWNlIENhbGxlclR5cGVT
dXBwbGllciB7DQoJcHVibGljIFN0cmluZyBnZXQoKTsNCn0NCg0KcHJpdmF0ZSBzdGF0aWMgUGF0
aCBjcmVhdGVTdW1tYXJpemVkRXhjZXB0aW9uSGFuZGxpbmcoKSB0aHJvd3MgU2VydmljZUV4Y2Vw
dGlvbiB7DQoJc3luY2hyb25pemVkKGNyZWF0ZVN1bW1hcml6ZWRFeGNlcHRpb25IYW5kbGluZ0xv
Y2spIHsNCgkJcmV0dXJuIGNyZWF0ZVN1bW1hcml6ZWRFeGNlcHRpb25IYW5kbGluZyhTVU1NQVJJ
WkVEX0VYQ0VQVElPTl9IQU5ETElOR19GSUxFKTsNCgl9DQp9DQpwcml2YXRlIHN0YXRpYyBQYXRo
IGNyZWF0ZVN1bW1hcml6ZWRFeGNlcHRpb25IYW5kbGluZyhTdHJpbmcgcEZpbGVOYW1lKQ0KCQl0
aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7DQoJRmlsZSBJU0RpciA9IFNlcnZlckFQSS5nZXRTZXJ2
ZXJDb25maWdEaXIoKS5nZXRQYXJlbnRGaWxlKCk7DQoJRmlsZSBJU1BhY2thZ2VzID0gbmV3IGph
dmEuaW8uRmlsZShJU0RpciwgInBhY2thZ2VzIik7DQoJZmluYWwgUGF0aCBjb25maWdEaXIgPSBT
ZXJ2ZXJBUEkuZ2V0UGFja2FnZUNvbmZpZ0RpcihXWF9SRVNJTElFTkNFKS50b1BhdGgoKTsNCglm
aW5hbCBQYXRoIG91dHB1dEZpbGUgPSBjb25maWdEaXIucmVzb2x2ZShwRmlsZU5hbWUpOw0KCVBh
dGhzLmFzc2VydFBhcmVudERpckV4aXN0cyhvdXRwdXRGaWxlKTsNCg0KCXRyeSB7DQoJCXRyeSAo
Q3JlYXRvciBjcmVhdG9yID0gU3VtbWFyaXplZEV4Y2VwdGlvbkhhbmRsaW5nSGFuZGxlci5uZXdD
cmVhdG9yKG91dHB1dEZpbGUpKSB7DQoJCQlmb3IgKEZpbGUgcGFja2FnZURpciA6IElTUGFja2Fn
ZXMubGlzdEZpbGVzKCkpIHsNCgkJCQlkZWJ1Z0xvZ0luZm8oIkZvdW5kOiAiICsgcGFja2FnZURp
cik7DQoJCQkJaWYgKHBhY2thZ2VEaXIuaXNEaXJlY3RvcnkoKSkgew0KCQkJCQlmaW5hbCBTdHJp
bmcgcGFja2FnZU5hbWUgPSBwYWNrYWdlRGlyLmdldE5hbWUoKTsNCgkJCQkJaWYgKHBhY2thZ2VO
YW1lLnN0YXJ0c1dpdGgoIldtIikpIHsNCgkJCQkJCWNvbnRpbnVlOw0KCQkJCQl9DQoJCQkJCWZp
bmFsIEZpbGUgcGFja2FnZUNmZ0RpciA9IG5ldyBGaWxlKHBhY2thZ2VEaXIsICJjb25maWciKTsN
CgkJCQkJaWYgKHBhY2thZ2VDZmdEaXIuaXNEaXJlY3RvcnkoKSkgew0KCQkJCQkJZmluYWwgRmls
ZSBwYWNrYWdlRWhkRmlsZSA9IG5ldyBGaWxlKHBhY2thZ2VDZmdEaXIsIEVSUk9SX0hBTkRMSU5H
X1hNTF9GSUxFKTsNCgkJCQkJCWlmIChwYWNrYWdlRWhkRmlsZS5pc0ZpbGUoKSkgew0KCQkJCQkJ
CWNyZWF0b3IucGFyc2UocGFja2FnZUVoZEZpbGUsIHBhY2thZ2VOYW1lKTsNCgkJCQkJCQlkZWJ1
Z0xvZ0luZm8oInBhcnNlOiAiICsgcGFja2FnZUVoZEZpbGUpOw0KDQoJCQkJCQl9DQoJCQkJCX0N
CgkJCQl9DQoJCQl9DQoJCX0NCgkJdmFsaWRhdGVYTUwoKTsNCgl9IGNhdGNoIChFeGNlcHRpb24g
ZSkgew0KCQlsb2dFcnJvcigiRXJyb3IgZHVyaW5nIHBhcnNpbmcgb2Ygc3VtbWFyaXplZEV4Y2Vw
dGlvbkhhbmRsaW5nRGVmaW5pdGlvbjogIiArIGUuZ2V0TWVzc2FnZSgpKTsNCgkJdGhyb3cgRXhj
ZXB0aW9ucy5zaG93KGUsIFNlcnZpY2VFeGNlcHRpb24uY2xhc3MpOw0KCX0NCglyZXR1cm4gb3V0
cHV0RmlsZTsNCn0NCg0KcHJpdmF0ZSBzdGF0aWMgZmluYWwgRXhjZXB0aW9uSGFuZGxpbmdMaXN0
ZW5lciBERUZBVUxUX0VSUk9SX0hBTkRMRVIgPSBuZXcgRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5l
cigpIHsNCglwdWJsaWMgdm9pZCBhY2NlcHQoU3RyaW5nIHMsIElEYXRhIGQpIHRocm93cyBVbmtu
b3duU2VydmljZUV4Y2VwdGlvbiB7DQoJCWxvZ0RlYnVnKCJEZWZhdWx0RXJyb3JIYW5kbGVyOiAt
LT4gIiArIHMpOw0KCQl0cnkgew0KCQkJU2VydmljZS5kb0ludm9rZShOU05hbWUuY3JlYXRlKHMp
LCBkKTsNCgkJfSBjYXRjaCAoVW5rbm93blNlcnZpY2VFeGNlcHRpb24gdXNlKSB7DQoJCQlsb2dE
ZWJ1ZygiRGVmYXVsdEVycm9ySGFuZGxlcjogIiArIHVzZS5nZXRDbGFzcygpLmdldE5hbWUoKSAr
ICIsICIgKyB1c2UuZ2V0TWVzc2FnZSgpKTsNCgkJCXRocm93IHVzZTsNCgkJfSBjYXRjaCAoRXhj
ZXB0aW9uIGUpIHsNCgkJCWxvZ0RlYnVnKCJEZWZhdWx0RXJyb3JIYW5kbGVyOiAiICsgZS5nZXRD
bGFzcygpLmdldE5hbWUoKSArICIsICIgKyBlLmdldE1lc3NhZ2UoKSk7DQoJCQl0aHJvdyBuZXcg
VW5kZWNsYXJlZFRocm93YWJsZUV4Y2VwdGlvbihlKTsNCgkJfQ0KCQlsb2dEZWJ1ZygiRGVmYXVs
dEVycm9ySGFuZGxlcjogPC0tIik7DQoJfQ0KfTsNCnByaXZhdGUgc3RhdGljIEV4Y2VwdGlvbkhh
bmRsaW5nTGlzdGVuZXIgZ2V0RXJyb3JIYW5kbGVyKCkgew0KCXN5bmNocm9uaXplZCAoZXhjZXB0
aW9uSGFuZGxpbmdMaXN0ZW5lckxvY2spIHsNCgkJaWYgKF9leGNlcHRpb25IYW5kbGluZ0xpc3Rl
bmVyID09IG51bGwpIHsNCgkJCXJldHVybiBERUZBVUxUX0VSUk9SX0hBTkRMRVI7DQoJCX0gZWxz
ZSB7DQoJCQlyZXR1cm4gX2V4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXI7DQoJCX0NCgl9DQp9DQpw
dWJsaWMgc3RhdGljIHZvaWQgc2V0RXJyb3JIYW5kbGVyKEV4Y2VwdGlvbkhhbmRsaW5nTGlzdGVu
ZXIgcEVycm9ySGFuZGxpbmdMaXN0ZW5lcikgew0KCXN5bmNocm9uaXplZCAoZXhjZXB0aW9uSGFu
ZGxpbmdMaXN0ZW5lckxvY2spIHsNCgkJX2V4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIgPSBwRXJy
b3JIYW5kbGluZ0xpc3RlbmVyOw0KCX0NCn0NCnByaXZhdGUgc3RhdGljIHZvaWQgaW52b2tlRXJy
b3JIYW5kbGVyKElEYXRhIHBIYW5kbGluZ1NlcnZpY2VJbnB1dCwNCgkJZmluYWwgU3RyaW5nIHBT
ZXJ2aWNlTmFtZSkgdGhyb3dzIEV4Y2VwdGlvbiB7DQoJbG9nRGVidWcoImludm9rZUVycm9ySGFu
ZGxlcjogLS0+ICIpOw0KCWZpbmFsIEV4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIgZWhsID0gZ2V0
RXJyb3JIYW5kbGVyKCk7DQoJbG9nRGVidWcoImludm9rZUVycm9ySGFuZGxlcjogZWg9IiArIGVo
bCk7DQoJZWhsLmFjY2VwdChwU2VydmljZU5hbWUsIHBIYW5kbGluZ1NlcnZpY2VJbnB1dCk7DQoJ
bG9nRGVidWcoImludm9rZUVycm9ySGFuZGxlcjogPC0tIik7DQoNCgkvLyAtLS0gPDxJUy1FTkQ+
PiAtLS0NCn0NCg0KcHJpdmF0ZSBzdGF0aWMgRG9jdW1lbnQgZ2V0ZXJyb3JIYW5kbGluZ3MoKSB0
aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7DQoJc3luY2hyb25pemVkKGV4Y2VwdGlvbkhhbmRsaW5n
TG9jaykgew0KCQlpZiAoX2V4Y2VwdGlvbkhhbmRsaW5nICE9IG51bGwpIHsNCgkJCXJldHVybiBf
ZXhjZXB0aW9uSGFuZGxpbmc7DQoJCX0NCgl9DQoJaW5pdGlhbGl6ZUV4Y2VwdGlvbkhhbmRsaW5n
cyhudWxsKTsNCglzeW5jaHJvbml6ZWQgKGV4Y2VwdGlvbkhhbmRsaW5nTG9jaykgew0KCQlpZiAo
X2V4Y2VwdGlvbkhhbmRsaW5nID09IG51bGwpIHsNCgkJCXRocm93IG5ldyBJbGxlZ2FsU3RhdGVF
eGNlcHRpb24oIlVuYWJsZSB0byBpbml0aWFsaXplIGVycm9ySGFuZGxpbmcuIERpZCB5b3UgYXNz
ZW1ibGUgaXQ/Iik7DQoJCX0gZWxzZSB7DQoJCQlyZXR1cm4gX2V4Y2VwdGlvbkhhbmRsaW5nOw0K
CQl9DQoJfQ0KfQ0KDQpwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0Q2FsbGVyVHlwZSgpIHsNCglD
YWxsZXJUeXBlU3VwcGxpZXIgY3RzOyANCglzeW5jaHJvbml6ZWQgKGNhbGxlclR5cGVTdXBwbGll
ckxvY2spIHsNCgkJY3RzID0gY2FsbGVyVHlwZVN1cHBsaWVyOw0KCX0NCglpZiAoY3RzID09IG51
bGwpIHsNCgkJY3RzID0gREVGQVVMVF9DQUxMRVJfVFlQRV9TVVBQTElFUjsNCgl9DQoJcmV0dXJu
IGN0cy5nZXQoKTsNCn0NCg0KcHVibGljIHN0YXRpYyB2b2lkIHNldENhbGxlclR5cGVTdXBwbGll
cihDYWxsZXJUeXBlU3VwcGxpZXIgcFN1cHBsaWVyKSB7DQoJc3luY2hyb25pemVkIChjYWxsZXJU
eXBlU3VwcGxpZXJMb2NrKSB7DQoJCWNhbGxlclR5cGVTdXBwbGllciA9IHBTdXBwbGllcjsNCgl9
DQp9DQoNCnByaXZhdGUgc3RhdGljIFN0cmluZyBnZXRDYWxsZXJUeXBlQnlDYWxsaW5nU2Vydmlj
ZSgpIHsNCglJRGF0YSBpbnB1dCA9IG51bGw7DQoJU3RyaW5nIHR5cGUgPSAiIjsNCgkvLyBvdXRw
dXQNCglJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJdHJ5IHsNCgkJb3V0
cHV0ID0gU2VydmljZS5kb0ludm9rZSggInd4LnJlc2lsaWVuY2UuaW1wbC5jYWxsZXIiLCAiZ2V0
Q2FsbGVyIiwgaW5wdXQgKTsNCgkJSURhdGFNYXAgb3V0cHV0TWFwID0gbmV3IElEYXRhTWFwKG91
dHB1dCk7DQoJCUlEYXRhTWFwIGNhbGxlck1hcCA9IG5ldyBJRGF0YU1hcChvdXRwdXRNYXAuZ2V0
QXNJRGF0YSgiY2FsbGVyIikpOw0KCQlyZXR1cm4gY2FsbGVyTWFwLmdldEFzU3RyaW5nKCJ0eXBl
Iik7DQoJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsNCgkJcmV0dXJuIHR5cGU7DQoJfQkNCn0NCg0K
DQoJcHJpdmF0ZSBzdGF0aWMgU3RyaW5nIGdldENhbGxTdGFja0FzSlNPTlN0cmluZyhBcnJheUxp
c3Q8SURhdGFDdXJzb3I+IGVycm9ySW5mb0hpZXJhY2h5KSB7DQoNCgkJSURhdGFbXSBjYWxsU3Rh
Y2sgPSBJRGF0YVV0aWwuZ2V0SURhdGFBcnJheShlcnJvckluZm9IaWVyYWNoeS5nZXQoMCksIEVS
Uk9SX0lORk9fQ0FMTF9TVEFDSyk7DQoJCQ0KCQlTdHJpbmcganNvblN0cmluZyA9ICIiOw0KCQkN
CgkJaWYgKGNhbGxTdGFjayAhPSBudWxsKSB7DQoJCQkvLyBpbnB1dA0KCQkJSURhdGEgaW5wdXQg
PSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCQlJRGF0YUN1cnNvciBpbnB1dEN1cnNvciA9IGlu
cHV0LmdldEN1cnNvcigpOw0KDQoJCQkvLyBkb2N1bWVudA0KCQkJSURhdGEgZG9jdW1lbnQgPSBJ
RGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCQlJRGF0YUN1cnNvciBkb2N1bWVudEN1cnNvciA9IGRv
Y3VtZW50LmdldEN1cnNvcigpOw0KCQkJSURhdGFVdGlsLnB1dChkb2N1bWVudEN1cnNvciwgImNh
bGxTdGFjayIsIGNhbGxTdGFjayk7DQoJCQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAiZG9j
dW1lbnQiLCBkb2N1bWVudCk7DQoJCQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAicHJldHR5
UHJpbnQiLCAiZmFsc2UiKTsNCgkJCWlucHV0Q3Vyc29yLmRlc3Ryb3koKTsNCg0KCQkJLy8gb3V0
cHV0DQoJCQlJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCQl0cnkgew0K
CQkJCW91dHB1dCA9IFNlcnZpY2UuZG9JbnZva2UoInB1Yi5qc29uIiwgImRvY3VtZW50VG9KU09O
U3RyaW5nIiwgaW5wdXQpOw0KCQkJCUlEYXRhQ3Vyc29yIG91dHB1dEN1cnNvciA9IG91dHB1dC5n
ZXRDdXJzb3IoKTsNCgkJCQlqc29uU3RyaW5nID0gSURhdGFVdGlsLmdldFN0cmluZyhvdXRwdXRD
dXJzb3IsICJqc29uU3RyaW5nIik7DQoJCQkJb3V0cHV0Q3Vyc29yLmRlc3Ryb3koKTsNCgkJCX0g
Y2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCQkJLy8gSXQgaXMgcG9zc2libGUsIHRoYXQgdGhpcyBz
ZXJ2aWNlIGRvZXMgbm90IGV4aXN0cyAoV004LjIgZW52aXJvbm1lbnRzL3N0b3JlcykuDQoJCQkJ
Ly8gVHJ5IGFnYWluIHdpdGggU2VydmljZSBmcm9tIFdtSlNPTiBwYWNrYWdlOg0KCQkJCS8vIFRo
aXMgYmxvY2sgY2FuIGJlIGRlbGV0ZWQsIGlmIGV2ZXJ5IGVudmlyb25tZW50IGlzIG9uIFdNOS4w
IQ0KCQkJCXRyeSB7DQoJCQkJCW91dHB1dCA9IFNlcnZpY2UuZG9JbnZva2UoInB1Yi5qc29uIiwg
ImRvY3VtZW50VG9KU09OIiwgaW5wdXQpOw0KCQkJCQlJRGF0YUN1cnNvciBvdXRwdXRDdXJzb3Ig
PSBvdXRwdXQuZ2V0Q3Vyc29yKCk7DQoJCQkJCWpzb25TdHJpbmcgPSBJRGF0YVV0aWwuZ2V0U3Ry
aW5nKG91dHB1dEN1cnNvciwgImpzb24iKTsNCgkJCQkJb3V0cHV0Q3Vyc29yLmRlc3Ryb3koKTsN
CgkJCQl9IGNhdGNoIChFeGNlcHRpb24gaW5uZXJFeCkgew0KCQkJCX0NCgkJCX0NCgkJfQ0KCQkN
CgkJcmV0dXJuIGpzb25TdHJpbmc7DQoJfQ0KCQ0KCXByaXZhdGUgc3RhdGljIEhhc2hNYXA8U3Ry
aW5nLCBTdHJpbmc+IGNyZWF0ZUdlbmVyaWNWYWx1ZU1hcChFeGNlcHRpb25IYW5kbGluZ0luZm8g
aGFuZGxpbmcsIGJvb2xlYW4gYnJlYWtSZXRyeUxvb3ApIHsNCgkJSGFzaE1hcDxTdHJpbmcsIFN0
cmluZz4gZ2VuZXJpY1ZhbHVlTWFwID0gbmV3IEhhc2hNYXA8U3RyaW5nLCBTdHJpbmc+KCk7DQoJ
CS8vIGV2YWx1YXRlIGVycm9yVG9CZVRocm93bjoNCgkJU3RyaW5nIGVycm9yVG9CZVRocm93biA9
IGhhbmRsaW5nLmdldEVycm9yVG9CZVRocm93bigpOw0KCQkNCgkJaW50IHJldHJ5Q291bnQgPSBn
ZXRSZXRyeUNvdW50KCk7DQoJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9SRVRS
WV9DT1VOVCwgU3RyaW5nLnZhbHVlT2YocmV0cnlDb3VudCkpOw0KDQoJCVN0cmluZyBtYXhSZXRy
eUF0dGVtcHRzU3RyaW5nID0gaGFuZGxpbmcuZ2V0TWF4UmV0cnlBdHRlbXB0cygpOw0KCQlJbnRl
Z2VyIG1heFJldHJ5QXR0ZW1wdHMgPSBudWxsOw0KCQl0cnkgew0KCQkJbWF4UmV0cnlBdHRlbXB0
cyA9IEludGVnZXIudmFsdWVPZihtYXhSZXRyeUF0dGVtcHRzU3RyaW5nKTsNCgkJfSBjYXRjaCAo
TnVtYmVyRm9ybWF0RXhjZXB0aW9uIG5mZSkgew0KCQl9CQkJCQkJDQoJCQ0KCQlpbnQgbWF4UmV0
cnlBdHRlbXB0c0JlZm9yZUFib3J0ID0gMDsNCgkJU3RyaW5nIG1heFJldHJ5QXR0ZW1wdHNCZWZv
cmVDYW5jZWxSZXRyeVN0cmluZyA9IGdldFZhbHVlQ29uZigNCgkJCQlNQVhfUkVUUllfQVRURU1Q
VFNfQkVGT1JFX0NBTkNFTF9SRVRSWSwgV1hfUkVTSUxJRU5DRSwgInRydWUiLA0KCQkJCSIiLCAi
IiwgIiIsICIiKTsJCQ0KCQl0cnkgew0KCQkJbWF4UmV0cnlBdHRlbXB0c0JlZm9yZUFib3J0ID0g
SW50ZWdlci52YWx1ZU9mKG1heFJldHJ5QXR0ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeVN0cmluZyk7
DQoJCX0gY2F0Y2ggKE51bWJlckZvcm1hdEV4Y2VwdGlvbiBuZmUpIHt9DQoNCgkJLy8gRGV0ZXJt
aW5lIGVycm9yVG9CZVRocm93biBhbmQgbWF4UmV0cnlBdHRlbXB0cyBhY2NvcmRpbmcgdG8gcmV0
cnkgY29uZmlndXJhdGlvbjoNCgkJaWYgKGJyZWFrUmV0cnlMb29wKSB7DQoJCQkvLyBicmVhayBl
bmRsZXNzIGxvb3AgLS0+IG92ZXJ3cml0ZSB3aXRoIE5PTkUgb3IgRkFUQUwNCgkJCWdlbmVyaWNW
YWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9FUlJPUl9UT19CRV9USFJPV05fSUQsIEVSUk9SX05P
TkUuZXF1YWxzKGVycm9yVG9CZVRocm93bik/RVJST1JfTk9ORTpFUlJPUl9GQVRBTCk7DQoJCQln
ZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfTUFYX1JFVFJZX0FUVEVNUFRTLCBTdHJp
bmcudmFsdWVPZihyZXRyeUNvdW50KSk7DQoJCX0gZWxzZSBpZiAobWF4UmV0cnlBdHRlbXB0cyAh
PSBudWxsICYmIG1heFJldHJ5QXR0ZW1wdHMgPT0gLTEgJiYgcmV0cnlDb3VudCA8IG1heFJldHJ5
QXR0ZW1wdHNCZWZvcmVBYm9ydCkgew0KCQkJLy8gZW5kbGVzcyBsb29wIC0tPiBUUkFOU0lFTlQN
CgkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9FUlJPUl9UT19CRV9USFJPV05f
SUQsIEVSUk9SX1RSQU5TSUVOVCk7DQoJCQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJV
VEVfTUFYX1JFVFJZX0FUVEVNUFRTLCBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQ2FuY2VsUmV0cnlT
dHJpbmcpOw0KCQl9IGVsc2Ugew0KCQkJLy8gbGVzcyB0aGFuIG1heFJldHJ5QXR0ZW1wdHMgLS0+
IFRSQU5TSUVOVA0KCQkJaWYgKG1heFJldHJ5QXR0ZW1wdHMgIT0gbnVsbCAmJiByZXRyeUNvdW50
IDwgbWF4UmV0cnlBdHRlbXB0cykgew0KCQkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJ
QlVURV9FUlJPUl9UT19CRV9USFJPV05fSUQsIEVSUk9SX1RSQU5TSUVOVCk7DQoJCQkJZ2VuZXJp
Y1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUywgbWF4UmV0cnlB
dHRlbXB0c1N0cmluZyk7DQoJCQl9IGVsc2UgewkJCQkJDQoJCQkJIGlmIChFUlJPUl9OT05FLmVx
dWFscyhlcnJvclRvQmVUaHJvd24pKSB7DQoJCQkJCSBnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9B
VFRSSUJVVEVfRVJST1JfVE9fQkVfVEhST1dOX0lELCBFUlJPUl9OT05FKTsNCgkJCQkgfSBlbHNl
IHsNCgkJCQkJIC8vIEZpbmFsIGJlaGF2aW9yIGZvciBhYm9ydA0KCQkJCQkgZ2VuZXJpY1ZhbHVl
TWFwLnB1dChFSERfQVRUUklCVVRFX0VSUk9SX1RPX0JFX1RIUk9XTl9JRCwgRVJST1JfRkFUQUwp
Ow0KCQkJCSB9DQoJCQkJIC8vIG1heFJldHJ5QXR0ZW1wdHMgaXMgcmVhY2hlZCBvciB3YXMgbm90
IGRlZmluZWQgKC0+IDApDQoJCQkJIFN0cmluZyBtYXhSZXRyeUF0dGVtcHRzUmVzdWx0ID0gbWF4
UmV0cnlBdHRlbXB0cyAhPSBudWxsID8gbWF4UmV0cnlBdHRlbXB0c1N0cmluZyA6ICIwIjsNCgkJ
CQkgZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUywg
bWF4UmV0cnlBdHRlbXB0c1Jlc3VsdCk7DQoJCQl9DQoJCX0NCgkJcmV0dXJuIGdlbmVyaWNWYWx1
ZU1hcDsNCgl9DQoJDQoJLyoqDQoJICogRmlsdGVycyB0aGUgZXJyb3IgaGllcmFyY2h5IGZvciB0
aGUgZGVlcGVzdCBzZXJ2aWNlIC0tPiBzaG93cw0KCSAqIGluIHdoaWNoIHNlcnZpY2Ugb2Ygb3Vy
IGNvZGUgdGhlIGVycm9yIG9jY3VyZWQNCgkgKiANCgkgKiBAcGFyYW0gaGllcmFjaGljYWxFcnJv
ckluZm8NCgkgKiBAcmV0dXJuIHRoZSBsZXZlbCBvZiB0aGUgZGVlcGVzdCBzZXJ2aWNlIG5hbWUN
CgkgKi8NCglwcml2YXRlIHN0YXRpYyBpbnQgZ2V0RGVlcGVzdEFwcGxpY2F0aW9uU2VydmljZUxl
dmVsKEFycmF5TGlzdDxFcnJvckluZm8+IGhpZXJhY2hpY2FsRXJyb3JJbmZvKSB7DQoJCVN0cmlu
ZyBzZXJ2aWNlID0gbnVsbDsNCgkJZm9yIChpbnQgbGV2ZWwgPSBoaWVyYWNoaWNhbEVycm9ySW5m
by5zaXplKCkgLSAxOyBsZXZlbCA+IDA7IGxldmVsLS0pIHsNCgkJCXNlcnZpY2UgPSBoaWVyYWNo
aWNhbEVycm9ySW5mby5nZXQobGV2ZWwpLmdldFNlcnZpY2UoKTsNCgkJCS8vIGNyZWF0ZSBvZiBM
aXN0IG9mIEZsb3duYW1lcyB0byBpZ25vcmUNCgkJCUxpc3Q8U3RyaW5nPiBpZ25vcmVGbG93cyA9
IEFycmF5cy5hc0xpc3QoInd4LnJlc2lsaWVuY2UucHViLnJlc2lsaWVuY2U6dGhyb3dFcnJvciIs
DQoJCQkJCSAJCQkJCQkJCSJ3eC5yZXNpbGllbmNlLnB1Yi5yZXNpbGllbmNlOnRocm93RXJyb3JJ
Zk5lY2Vzc2FyeSIsIA0KCQkJCQkJCQkJCQkJCSAid3gucmVzaWxpZW5jZS5wdWIucmVzaWxpZW5j
ZTpwb3N0UHJvY2Vzc0ZvclRvcExldmVsU2VydmljZSIpOw0KCQkJDQoJCQkNCgkJCQ0KCQkJDQoJ
CQkNCgkJCWlmIChzZXJ2aWNlICE9IG51bGwgJiYgDQoJCQkJIXNlcnZpY2Uuc3RhcnRzV2l0aCgi
cHViLiIpICYmDQoJCQkJIXNlcnZpY2Uuc3RhcnRzV2l0aCgid20uIikgJiYgDQoJCQkJIWlnbm9y
ZUZsb3dzLmNvbnRhaW5zKHNlcnZpY2UpDQoJCQkpIHsNCgkJCQlyZXR1cm4gbGV2ZWw7DQoJCQl9
DQoJCX0NCg0KCQlyZXR1cm4gMDsNCgl9DQoNCgkNCgkvKioNCgkgKiBMb2dzIG1lc3NhZ2UgZnJv
bSBhIGNhdGFsb2cuDQoJICogDQoJICogQHBhcmFtIGFGYWNpbGl0eUtleQ0KCSAqICAgICAgICAg
ICAgZGVmaW5lcyB0aGUgZmFjaWxpdHkgaW4gdGhlIGNhdGFsb2cNCgkgKiBAcGFyYW0gYU1lc3Nh
Z2VLZXkNCgkgKiAgICAgICAgICAgIGNvcnJlc3BvbmRzIHdpdGggdGhlIG1lc3NhZ2Uga2V5IGlu
IHRoZSBjYXRhbG9nDQoJICogQHBhcmFtIGFNZXNzYWdlUGFyYW1zDQoJICogICAgICAgICAgICBp
ZiBtZXNzYWdlIGluIHRoZSBjYXRhbG9nIGhhcyBwYXJhbWV0ZXJzDQoJICogQHRocm93cyBTZXJ2
aWNlRXhjZXB0aW9uDQoJICogICAgICAgICAgICAgdGhyb3duIGlmIHRoZSBsb2dnaW5nIGZhaWxl
ZA0KCSAqLw0KCS8qcHJpdmF0ZSBzdGF0aWMgdm9pZCBsb2dNZXNzYWdlRnJvbUNhdGFsb2coU3Ry
aW5nIGFGYWNpbGl0eUtleSwgU3RyaW5nIGFNZXNzYWdlS2V5LCBTdHJpbmdbXSBhTWVzc2FnZVBh
cmFtcykgew0KCQkvLyBpbnB1dA0KCQlJRGF0YSB0SW5wdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRl
KCk7DQoJCUlEYXRhQ3Vyc29yIGlucHV0Q3Vyc29yID0gdElucHV0LmdldEN1cnNvcigpOw0KCQlJ
RGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAiZmFjaWxpdHlLZXkiLCBhRmFjaWxpdHlLZXkpOw0K
CQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAibWVzc2FnZUtleSIsIGFNZXNzYWdlS2V5KTsN
CgkNCgkJLy8gVGhlcmUgYXJlIHNvbWUgbWVzc2FnZSBwYXJhbXMgcHJvdmlkZWQNCgkJaWYgKGFN
ZXNzYWdlUGFyYW1zLmxlbmd0aCA+IDApIHsNCgkJCUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3Is
ICJtZXNzYWdlUGFyYW1zIiwgYU1lc3NhZ2VQYXJhbXMpOw0KCQl9DQoJCWlucHV0Q3Vyc29yLmRl
c3Ryb3koKTsNCgkNCgkJdHJ5IHsNCgkJCVNlcnZpY2UuZG9JbnZva2UoInd4LnJlc2lsaWVuY2Uu
aW1wbDoiLCAibG9nTWVzc2FnZUZyb21DYXRhbG9nIiwgdElucHV0KTsNCgkJfSANCgkJY2F0Y2gg
KEV4Y2VwdGlvbiBlKSB7DQoJCX0NCgl9Ki8NCg0KCQ0KCXByaXZhdGUgc3RhdGljIHZvaWQgdmFs
aWRhdGVYTUwoKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7DQoJCWxvZ0luZm8oIlZhbGlkYXRp
bmcgdGhlIHN1bW1hcml6ZWQgZXJyb3IgaGFuZGxpbmciKTsNCgkJRmlsZSB4bWxGaWxlID0gbmV3
IEZpbGUoU2VydmVyQVBJLmdldFBhY2thZ2VDb25maWdEaXIoV1hfUkVTSUxJRU5DRSkgKyAiLyIg
KyBTVU1NQVJJWkVEX0VYQ0VQVElPTl9IQU5ETElOR19GSUxFKTsNCgkJRmlsZSBzY2hlbWFGaWxl
ID0gbmV3IEZpbGUoU2VydmVyQVBJLmdldFBhY2thZ2VDb25maWdEaXIoV1hfUkVTSUxJRU5DRSkg
KyAiLyIgKyBFWENFUFRJT05fSEFORExJTkdfWFNEX0ZJTEUpOw0KCQkNCgkJdHJ5IHsNCgkJCS8v
IDEuIExvb2t1cCBhIGZhY3RvcnkgZm9yIHRoZSBXM0MgWE1MIFNjaGVtYSBsYW5ndWFnZQ0KCQkJ
U2NoZW1hRmFjdG9yeSBmYWN0b3J5ID0gU2NoZW1hRmFjdG9yeS5uZXdJbnN0YW5jZSgiaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiKTsNCgkJCS8vIDIuIENvbXBpbGUgdGhlIHNjaGVt
YS4NCgkJCS8vIEhlcmUgdGhlIHNjaGVtYSBpcyBsb2FkZWQgZnJvbSBhIGphdmEuaW8uRmlsZSwg
YnV0IHlvdSBjb3VsZCB1c2UNCgkJCS8vIGEgamF2YS5uZXQuVVJMIG9yIGEgamF2YXgueG1sLnRy
YW5zZm9ybS5Tb3VyY2UgaW5zdGVhZC4NCgkJCVNjaGVtYSBzY2hlbWEgPSBmYWN0b3J5Lm5ld1Nj
aGVtYShzY2hlbWFGaWxlKTsJDQoJCQkvLyAzLiBHZXQgYSB2YWxpZGF0b3IgZnJvbSB0aGUgc2No
ZW1hLg0KCQkJVmFsaWRhdG9yIHZhbGlkYXRvciA9IHNjaGVtYS5uZXdWYWxpZGF0b3IoKTsJDQoJ
CQkvLyA0LiBQYXJzZSB0aGUgZG9jdW1lbnQgeW91IHdhbnQgdG8gY2hlY2suDQoJCQlTb3VyY2Ug
c291cmNlID0gbmV3IFN0cmVhbVNvdXJjZSh4bWxGaWxlKTsJDQoJCQkvLyA1LiBDaGVjayB0aGUg
ZG9jdW1lbnQNCgkJCXZhbGlkYXRvci52YWxpZGF0ZShzb3VyY2UpOw0KCQkJbG9nSW5mbyh4bWxG
aWxlLmdldE5hbWUoKSArICIgaXMgdmFsaWQiKTsNCgkJfSANCgkJY2F0Y2ggKFNBWEV4Y2VwdGlv
bnxJT0V4Y2VwdGlvbiBleCkgew0KCQkJU3RyaW5nIG1lc3NhZ2UgPSB4bWxGaWxlLmdldE5hbWUo
KSArICIgaXMgbm90IHZhbGlkIGJlY2F1c2UgXG4iICsgZXguZ2V0TWVzc2FnZSgpOw0KCQkJZmlu
YWwgU2VydmljZUV4Y2VwdGlvbiBzZSA9IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKG1lc3NhZ2UpOw0K
CQkJc2UuaW5pdENhdXNlKGV4KTsNCgkJCXRocm93IHNlOw0KCQl9CQ0KCX0NCg0KCXByaXZhdGUg
c3RhdGljIFN0cmluZyBnZXRWYWx1ZUNvbmYoU3RyaW5nIGtleSwgU3RyaW5nIHd4Q29uZmlnUGtn
TmFtZSwNCgkJCVN0cmluZyBub1NlcnZpY2VFeGNlcHRpb24sIFN0cmluZyBzdWJzdGl0dXRlVmFy
aWFibGVzLA0KCQkJU3RyaW5nIGlnbm9yZUdsb2JhbFZhbHVlcywgU3RyaW5nIHNjYW5BbGxDb25m
aWd1cmF0aW9ucywNCgkJCVN0cmluZyBub1ZhcmlhYmxlSW50ZXJwb2xhdGlvbikgew0KCQlTdHJp
bmcgcHJvcGVydHlWYWx1ZSA9ICIgIjsNCgkJLy8gaW5wdXQNCgkJSURhdGEgY29uZmlnUGFyYW0g
PSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCUlEYXRhQ3Vyc29yIGNvbmZpZ1BhcmFtQ3Vyc29y
ID0gY29uZmlnUGFyYW0uZ2V0Q3Vyc29yKCk7DQoJCUlEYXRhVXRpbC5wdXQoY29uZmlnUGFyYW1D
dXJzb3IsICJrZXkiLCBrZXkpOw0KCQlJRGF0YVV0aWwucHV0KGNvbmZpZ1BhcmFtQ3Vyc29yLCAi
d3hDb25maWdQa2dOYW1lIiwgd3hDb25maWdQa2dOYW1lKTsNCgkJSURhdGFVdGlsLnB1dChjb25m
aWdQYXJhbUN1cnNvciwgIm5vU2VydmljZUV4Y2VwdGlvbiIsDQoJCQkJbm9TZXJ2aWNlRXhjZXB0
aW9uKTsNCgkJY29uZmlnUGFyYW1DdXJzb3IuZGVzdHJveSgpOw0KCQ0KCQkvLyBvdXRwdXQNCgkJ
SURhdGEgY29uZmlnT3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0KCQl0cnkgew0KCQkJ
Y29uZmlnT3V0cHV0ID0gU2VydmljZS5kb0ludm9rZSgid3guY29uZmlnLnB1YiIsICJnZXRWYWx1
ZSIsDQoJCQkJCWNvbmZpZ1BhcmFtKTsNCgkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsNCgkJCXJl
dHVybiBwcm9wZXJ0eVZhbHVlOw0KCQl9DQoJCUlEYXRhQ3Vyc29yIGNvbmZpZ091dHB1dEN1cnNv
ciA9IGNvbmZpZ091dHB1dC5nZXRDdXJzb3IoKTsNCgkJcHJvcGVydHlWYWx1ZSA9IElEYXRhVXRp
bA0KCQkJCS5nZXRTdHJpbmcoY29uZmlnT3V0cHV0Q3Vyc29yLCAicHJvcGVydHlWYWx1ZSIpOw0K
CQljb25maWdPdXRwdXRDdXJzb3IuZGVzdHJveSgpOw0KCQlsb2dEZWJ1ZygiZ2V0VmFsdWVDb25m
IGZvciAiICsga2V5ICsgIiByZXR1cm5zOiAiICsgcHJvcGVydHlWYWx1ZSk7DQoJCXJldHVybiBw
cm9wZXJ0eVZhbHVlOw0KCX0NCgkNCglwcml2YXRlIHN0YXRpYyBpbnQgZ2V0UmV0cnlDb3VudCgp
IHsNCgkJSURhdGEgaW5wdXQgPSBudWxsOw0KCQkvLyBvdXRwdXQNCgkJSURhdGEgb3V0cHV0ID0g
SURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0KCQl0cnkgew0KCQkJb3V0cHV0ID0gU2VydmljZS5kb0lu
dm9rZSgicHViLmZsb3ciLCAiZ2V0UmV0cnlDb3VudCIsIGlucHV0KTsNCgkJCUlEYXRhQ3Vyc29y
IG91dHB1dEN1cnNvciA9IG91dHB1dC5nZXRDdXJzb3IoKTsNCgkJCXJldHVybiBJbnRlZ2VyLnBh
cnNlSW50KElEYXRhVXRpbC5nZXRTdHJpbmcob3V0cHV0Q3Vyc29yLCAicmV0cnlDb3VudCIpKTsN
CgkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsNCgkJCXJldHVybiAwOw0KCQl9DQoJfQ0KCQ0KCS8q
Kg0KCSAqIEV4dHJhY3RzIGFuIGVycm9yIGhpZXJhcmNoeSBmb3IgYSBnaXZlbiBlcnJvciBoaWVy
YXJjaHkgKG5vcm1hbGx5IG9ubHkNCgkgKiBmaWxsZWQgYnkgb25lIChyb290KSBlcnJvcikuIFVz
ZXMgdGhlIGNhbGxTdGFjayBhbmQgdGhlIGRlZXBlc3QgZXJyb3JJbmZvIHRvIGJ1aWxkIGhpZWFy
Y2h5Lg0KCSAqIA0KCSAqIEBwYXJhbSBwRXJyb3JIaWVyYXJjaHkNCgkgKiAgICAgICAgICAgIC0g
YXJyYXkgbGlzdCBvZiBJRGF0YUN1cnNvcnMgb24gcHViLmV2ZW50OmV4Y2VwdGlvbkluZm8NCgkg
KiBAcmV0dXJuIGZ1bGwgYXJyYXkgbGlzdCBhcnJheSBsaXN0IG9mIEVycm9ySW5mbyBvbg0KCSAq
ICAgICAgICAgcHViLmV2ZW50OmV4Y2VwdGlvbkluZm8sIGNvbnRhaW5pbmcgYWxsIGVycm9ycyBm
cm9tIHJvb3QoMCkgdG8NCgkgKiAgICAgICAgIG9yaWdpbiAoc2l6ZSBvZiBhcnJheSBsaXN0KQ0K
CSAqLw0KCXByaXZhdGUgc3RhdGljIEFycmF5TGlzdDxFcnJvckluZm8+IGV4dHJhY3RFcnJvckhp
ZXJhcmNoeShBcnJheUxpc3Q8SURhdGFDdXJzb3I+IHBFcnJvckhpZXJhcmNoeSkgewkNCgkJaWYg
KHBFcnJvckhpZXJhcmNoeSA9PSBudWxsKSB7DQoJCQlyZXR1cm4gbnVsbDsNCgkJfQ0KCQkNCgkJ
SURhdGFDdXJzb3IgZGVlcGVzdE5lc3RlZEVycm9yID0gZ2V0RGVlcGVzdE5lc3RlZEVycm9yKHBF
cnJvckhpZXJhcmNoeSk7DQoJCQ0KCQkvLyBnZXQgY2FsbFN0YWNrIG9mIGVycm9yOg0KCQlJRGF0
YVtdIGNhbGxTdGFjayA9IElEYXRhVXRpbC5nZXRJRGF0YUFycmF5KHBFcnJvckhpZXJhcmNoeS5n
ZXQoMCksICJjYWxsU3RhY2siKTsNCgkJQXJyYXlMaXN0PEVycm9ySW5mbz4gZXJyb3JJbmZvTGlz
dCA9IG51bGw7DQoJCQ0KCQlpZiAoY2FsbFN0YWNrICE9IG51bGwpIHsNCgkJCWVycm9ySW5mb0xp
c3QgPSBuZXcgQXJyYXlMaXN0PEVycm9ySW5mbz4oY2FsbFN0YWNrLmxlbmd0aCk7DQoJCQkNCgkJ
CS8vIHVzZSB0aGUgZXJyb3IgYW5kIGVycm9yVHlwZSBvZiB0aGUgZGVlcGVzdCBlcnJvckluZm8g
dG8gZGV0ZXJtaW5lIHRoZSBlcnJvciBhbmQgZXJyb3JUeXBlIG9mIGVhY2ggbGV2ZWw6DQoJCQlT
dHJpbmcgbmVzdGVkRXJyb3JUeXBlID0gSURhdGFVdGlsLmdldFN0cmluZyhkZWVwZXN0TmVzdGVk
RXJyb3IsIEVSUk9SX0lORk9fRVJST1JfVFlQRSk7DQoJCQlTdHJpbmcgbmVzdGVkRXJyb3IgPSBJ
RGF0YVV0aWwuZ2V0U3RyaW5nKGRlZXBlc3ROZXN0ZWRFcnJvciwgRVJST1JfSU5GT19FUlJPUik7
DQoNCgkJCS8vIHRoZSBjYWxsc3RhY2sgaXMgb3JkZXJlZCBpbnZlcnNlIQ0KCQkJZm9yIChpbnQg
aSA9IGNhbGxTdGFjay5sZW5ndGggLSAxIDsgaSA+PSAwOyBpLS0pIHsNCgkJCQkvLyB1c2UgdGhl
IHNlcnZpY2UgbmFtZXMgb2YgdGhlIGNhbGxzdGFjazoNCgkJCQlJRGF0YUN1cnNvciBjYWxsU3Rh
Y2tDdXJzb3IgPSBjYWxsU3RhY2tbaV0uZ2V0Q3Vyc29yKCk7DQoJCQkJU3RyaW5nIHNlcnZpY2Ug
PSBJRGF0YVV0aWwuZ2V0U3RyaW5nKGNhbGxTdGFja0N1cnNvciwgRVJST1JfSU5GT19DQUxMX1NU
QUNLX1NFUlZJQ0UpOw0KCQkJCVN0cmluZyBmbG93U3RlcCA9IElEYXRhVXRpbC5nZXRTdHJpbmco
Y2FsbFN0YWNrQ3Vyc29yLCBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfRkxPV19TVEVQKTsNCgkJCQlp
ZiAoZmxvd1N0ZXAgPT0gbnVsbCB8fCBmbG93U3RlcC5lcXVhbHMoIiIpKSB7DQoJCQkJCWZsb3dT
dGVwID0gIm4uYS4iOw0KCQkJCX0NCgkJCQkNCgkJCQllcnJvckluZm9MaXN0LmFkZChuZXcgRXJy
b3JJbmZvKG5lc3RlZEVycm9yLCBuZXN0ZWRFcnJvclR5cGUsIHNlcnZpY2UsIGZsb3dTdGVwKSk7
DQoJCQl9DQoJCX0NCgkJcmV0dXJuIGVycm9ySW5mb0xpc3Q7DQoJfQ0KCQ0KCS8qKg0KCSAqIEdl
dHMgdGhlIGRlZXBlc3QgZXJyb3IgaW4gdGhlIGVycm9yIGhpZXJhcmNoeQ0KCSAqIA0KCSAqIEBw
YXJhbSBwRXJyb3JIaWVyYXJjaHkNCgkgKiAgICAgICAgICAgIC0gYXJyYXkgbGlzdCBvZiBJRGF0
YUN1cnNvcnMgb24gcHViLmV2ZW50OmV4Y2VwdGlvbkluZm8NCgkgKiBAcmV0dXJuIGN1cnNvciBv
ZiB0aGUgZGVlcGVzdCBlcnJvcg0KCSAqLw0KCXByaXZhdGUgc3RhdGljIElEYXRhQ3Vyc29yIGdl
dERlZXBlc3ROZXN0ZWRFcnJvcihBcnJheUxpc3Q8SURhdGFDdXJzb3I+IHBFcnJvckhpZXJhcmNo
eSkgewkJDQoJCQ0KCQlJRGF0YUN1cnNvciBuZXN0ZWRFcnJvciA9IHBFcnJvckhpZXJhcmNoeS5n
ZXQoMCk7DQoJCUlEYXRhQ3Vyc29yIGN1cnJlbnRFcnJvciA9IG51bGw7DQoJCUlEYXRhIG5lc3Rl
ZEVycm9ySURhdGEgPSBudWxsOw0KCQlkbyB7DQoJCQljdXJyZW50RXJyb3IgPSBuZXN0ZWRFcnJv
cjsNCgkJCW5lc3RlZEVycm9ySURhdGEgPSBJRGF0YVV0aWwuZ2V0SURhdGEoY3VycmVudEVycm9y
LCBFUlJPUl9JTkZPX05FU1RFRF9FUlJPUl9JRCk7DQoJCQlpZiAobmVzdGVkRXJyb3JJRGF0YSAh
PSBudWxsKSB7DQoJCQkJbmVzdGVkRXJyb3IgPSBuZXN0ZWRFcnJvcklEYXRhLmdldEN1cnNvcigp
Ow0KCQkJfSBlbHNlIHsNCgkJCQluZXN0ZWRFcnJvciA9IG51bGw7DQoJCQl9DQoJCX0gd2hpbGUg
KG5lc3RlZEVycm9yICE9IG51bGwpOw0KDQoJCXJldHVybiBjdXJyZW50RXJyb3I7DQoNCgl9CQ0K
DQoJLypwdWJsaWMgc3RhdGljIGNsYXNzIExvZyB7DQoJCXByaXZhdGUgc3RhdGljIGZpbmFsIExv
ZyBJTlNUQU5DRSA9IG5ldyBMb2coKTsNCgkJcHJpdmF0ZSBzdGF0aWMgZmluYWwgYm9vbGVhbiBs
b2dnaW5nID0gZmFsc2U7DQoNCgkJcHVibGljIHN0YXRpYyB2b2lkIGluaXQoKSB7DQoJCQlpZiAo
bG9nZ2luZykgew0KCQkJCUlOU1RBTkNFLmluaXRXcml0ZXIoKTsNCgkJCX0NCgkJfQ0KCQlwdWJs
aWMgc3RhdGljIHZvaWQgd3JpdGUoU3RyaW5nIHBNZXNzYWdlKSB7DQoJCQlpZiAobG9nZ2luZykg
ew0KCQkJCUlOU1RBTkNFLmxvZyhwTWVzc2FnZSk7DQoJCQl9DQoJCX0NCgkJcHVibGljIHN0YXRp
YyB2b2lkIGNsb3NlKCkgew0KCQkJaWYgKGxvZ2dpbmcpIHsNCgkJCQlJTlNUQU5DRS5jbG9zZVdy
aXRlcigpOw0KCQkJfQ0KCQl9DQoJCXB1YmxpYyBzdGF0aWMgYm9vbGVhbiBpc0xvZ2dpbmcoKSB7
DQoJCQlyZXR1cm4gbG9nZ2luZzsNCgkJfQ0KDQoJCXByaXZhdGUgYm9vbGVhbiBpbml0aWFsaXpl
ZDsNCgkJcHJpdmF0ZSB2b2lkIGluaXRXcml0ZXIoKSB7DQoJCQlpbml0aWFsaXplZCA9IHRydWU7
DQoJCX0NCgkJcHJpdmF0ZSB2b2lkIGNsb3NlV3JpdGVyKCkgew0KCQkJaW5pdGlhbGl6ZWQgPSBm
YWxzZTsNCgkJfQ0KCQlwcml2YXRlIHZvaWQgbG9nKFN0cmluZyBwTWVzc2FnZSkgew0KCQkJaWYg
KGluaXRpYWxpemVkKSB7DQoJCQkJLy8gVE9ETzoNCgkJCQkvL0xvZy5sb2dUcmFjZU1lc3NhZ2Uo
IkVIRiIsIHBNZXNzYWdlKTsNCgkJCX0NCgkJfQ0KCX0qLw0KCXB1YmxpYyBzdGF0aWMgY2xhc3Mg
RXJyb3JIYW5kbGluZ0V4Y2VwdGlvbiBleHRlbmRzIFJ1bnRpbWVFeGNlcHRpb24gew0KCQlwcml2
YXRlIHN0YXRpYyBmaW5hbCBsb25nIHNlcmlhbFZlcnNpb25VSUQgPSAtMzk1MDEwMDc0MTYzNjQ3
OTY4MUw7DQoNCgkJcHVibGljIEVycm9ySGFuZGxpbmdFeGNlcHRpb24oU3RyaW5nIHBNc2csIFRo
cm93YWJsZSBwQ2F1c2UpIHsNCgkJCXN1cGVyKHBNc2csIHBDYXVzZSk7DQoJCX0NCg0KCQlwdWJs
aWMgRXJyb3JIYW5kbGluZ0V4Y2VwdGlvbihTdHJpbmcgcE1zZykgew0KCQkJc3VwZXIocE1zZyk7
DQoJCX0NCg0KCQlwdWJsaWMgRXJyb3JIYW5kbGluZ0V4Y2VwdGlvbihUaHJvd2FibGUgcENhdXNl
KSB7DQoJCQlzdXBlcihwQ2F1c2UpOw0KCQl9DQoJfQ0KDQoJcHVibGljIHN0YXRpYyBjbGFzcyBF
eGNlcHRpb25IYW5kbGluZ0luZm8gew0KCQkvLyBPbGQgcmVwcmVzZW50YXRpb24gb2YgRXhjZXB0
aW9uSGFuZGxpbmdJbmZvIChkZXByZWNhdGVkKQ0KCQlwcml2YXRlIGZpbmFsIExpc3Q8U3RyaW5n
PiBzZXJ2aWNlTmFtZXMgPSBuZXcgQXJyYXlMaXN0PD4oKTsNCgkJcHJpdmF0ZSBmaW5hbCBTdHJp
bmcgIGVycm9yVG9CZVRocm93biwgdHlwZSwgZXJyb3JDb2RlLCBleGNlcHRpb25UeXBlLCBtYXhS
ZXRyeUF0dGVtcHRzOw0KCQlwcml2YXRlIGZpbmFsIGJvb2xlYW4gcHJpbnRCdXNpbmVzc09iamVj
dDsNCgkJcHVibGljIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyhTdHJpbmcgcEVycm9yVG9CZVRocm93
biwgU3RyaW5nIHBUeXBlLCBTdHJpbmcgcEVycm9yQ29kZSwNCgkJCQkgCQkJCQkgU3RyaW5nIHBF
eGNlcHRpb25UeXBlLCBTdHJpbmcgcE1heFJldHJ5QXR0ZW1wdHMsDQoJCQkJIAkJCQkJIGJvb2xl
YW4gcFByaW50QnVzaW5lc3NPYmplY3QpIHsNCgkJCWVycm9yVG9CZVRocm93biA9IHBFcnJvclRv
QmVUaHJvd247DQoJCQl0eXBlID0gcFR5cGU7DQoJCQllcnJvckNvZGUgPSBwRXJyb3JDb2RlOw0K
CQkJZXhjZXB0aW9uVHlwZSA9IHBFeGNlcHRpb25UeXBlOw0KCQkJbWF4UmV0cnlBdHRlbXB0cyA9
IHBNYXhSZXRyeUF0dGVtcHRzOw0KCQkJcHJpbnRCdXNpbmVzc09iamVjdCA9IHBQcmludEJ1c2lu
ZXNzT2JqZWN0Ow0KCQl9DQoNCgkJcHVibGljIExpc3Q8U3RyaW5nPiBnZXRIYW5kbGluZ1NlcnZp
Y2VzKCkgew0KCQkJcmV0dXJuIHNlcnZpY2VOYW1lczsNCgkJfQ0KDQoJCXB1YmxpYyB2b2lkIGFk
ZFNlcnZpY2VOYW1lKFN0cmluZyBwU2VydmljZU5hbWUpIHsNCgkJCXNlcnZpY2VOYW1lcy5hZGQo
cFNlcnZpY2VOYW1lKTsNCgkJfQ0KDQoJCXB1YmxpYyBTdHJpbmcgZ2V0RXJyb3JUb0JlVGhyb3du
KCkgew0KCQkJcmV0dXJuIGVycm9yVG9CZVRocm93bjsNCgkJfQ0KDQoJCXB1YmxpYyBTdHJpbmcg
Z2V0VHlwZSgpIHsNCgkJCXJldHVybiB0eXBlOw0KCQl9DQoNCgkJcHVibGljIFN0cmluZyBnZXRF
cnJvckNvZGUoKSB7DQoJCQlyZXR1cm4gZXJyb3JDb2RlOw0KCQl9DQoNCgkJcHVibGljIFN0cmlu
ZyBnZXRFeGNlcHRpb25UeXBlKCkgew0KCQkJcmV0dXJuIGV4Y2VwdGlvblR5cGU7DQoJCX0NCg0K
CQlwdWJsaWMgU3RyaW5nIGdldE1heFJldHJ5QXR0ZW1wdHMoKSB7DQoJCQlyZXR1cm4gbWF4UmV0
cnlBdHRlbXB0czsNCgkJfQ0KDQoJCXB1YmxpYyBib29sZWFuIGlzUHJpbnRCdXNpbmVzc09iamVj
dCgpIHsNCgkJCXJldHVybiBwcmludEJ1c2luZXNzT2JqZWN0Ow0KCQl9DQoNCgkJQE92ZXJyaWRl
DQoJCXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7DQoJCQlmaW5hbCBTdHJpbmdCdWlsZGVyIHNi
ID0gbmV3IFN0cmluZ0J1aWxkZXIoKTsNCgkJCXNiLmFwcGVuZChzdXBlci50b1N0cmluZygpKTsN
CgkJCXNiLmFwcGVuZCgiOiBlcnJvclRvQmVUaHJvd249ICIpOw0KCQkJc2IuYXBwZW5kKGVycm9y
VG9CZVRocm93bik7DQoJCQlzYi5hcHBlbmQoIiwgdHlwZT0iKTsNCgkJCXNiLmFwcGVuZCh0eXBl
KTsNCgkJCXNiLmFwcGVuZCgiZXJyb3JDb2RlPSIpOw0KCQkJc2IuYXBwZW5kKGVycm9yQ29kZSk7
DQoJCQlzYi5hcHBlbmQoIiwgZXhjZXB0aW9uVHlwZT0iKTsNCgkJCXNiLmFwcGVuZChleGNlcHRp
b25UeXBlKTsNCgkJCXNiLmFwcGVuZCgiLCBtYXhSZXRyeUF0dGVtcHRzPSIpOw0KCQkJc2IuYXBw
ZW5kKG1heFJldHJ5QXR0ZW1wdHMpOw0KCQkJc2IuYXBwZW5kKCIsIHByaW50QnVzaW5lc3NPYmpl
Y3Q9Iik7DQoJCQlzYi5hcHBlbmQocHJpbnRCdXNpbmVzc09iamVjdCk7DQoJCQlzYi5hcHBlbmQo
Iiwgc2VydmljZU5hbWVzPSIpOw0KCQkJLy8gVE9ETzoNCgkJCS8vc2IuYXBwZW5kKFN0cmluZ3Mu
YXNTdHJpbmcoc2VydmljZU5hbWVzKSk7DQoJCQlyZXR1cm4gc2IudG9TdHJpbmcoKTsNCgkJfQ0K
CQkNCgl9DQoJDQoJLyoqDQoJICogRXh0cmFjdCBoYW5kbGluZ3MgZm9yIGFuIGVycm9yIGF0IGEg
bG9jYXRpb24gZnJvbSBhIGdpdmVuIGV4Y2VwdGlvbg0KCSAqIGhhbmRsaW5nIGRlZmluaXRpb24N
CgkgKiANCgkgKiBAcGFyYW0gcEVycm9ySGFuZGxpbmcNCgkgKiAgICAgICAgICAgIGRlZmluaXRp
b24gYXMgRE9NIGRvY3VtZW50IHRvIHVzZSBmb3IgZXh0cmFjdGlvbg0KCSAqIEBwYXJhbSBwTG9j
YXRpb25YUGF0aA0KCSAqICAgICAgICAgICAgZXJyb3IgbG9jYXRpb24gYXMgWFBBVEgNCgkgKiBA
cGFyYW0gcEV4Y2VwdGlvblR5cGUNCgkgKiAgICAgICAgICAgIGVycm9yIHR5cGUgYXMgU3RyaW5n
DQoJICogQHBhcmFtIGN1cnJlbnRDYWxsZXJUeXBlDQoJICogICAgICAgICAgICBjYWxsZXIgdHlw
ZSBhcyBTdHJpbmcJDQoJICogQHBhcmFtIGN1cnJlbnRFcnJvck1lc3NhZ2UNCgkgKiAgICAgICAg
ICAgIG9yaWdpbmFsIGVycm9yIGFzIFN0cmluZyANCgkgKiBAcmV0dXJuIGFsbCBmb3VuZCBoYW5k
bGluZ3MgZm9yIHRoZSBnaXZlbiBlcnJvciBhcyBhbiBhcnJheSBsaXN0LCBlbXB0eQ0KCSAqICAg
ICAgICAgbGlzdCBpbiBjYXNlIG9mIG5vIGZvdW5kIGVycm9yDQoJICogQHRocm93cyBTZXJ2aWNl
RXhjZXB0aW9uDQoJICovDQoJQFN1cHByZXNzV2FybmluZ3MoInVuY2hlY2tlZCIpDQoJcHJpdmF0
ZSBzdGF0aWMgRXhjZXB0aW9uSGFuZGxpbmdJbmZvIGdldEhhbmRsaW5nc0ZvckxvY2F0aW9uKA0K
CQkJRG9jdW1lbnQgcEVycm9ySGFuZGxpbmcsIFN0cmluZyBwTG9jYXRpb25YUGF0aCwNCgkJCVN0
cmluZyBwRXhjZXB0aW9uVHlwZSwgU3RyaW5nIGN1cnJlbnRDYWxsZXJUeXBlLCBTdHJpbmcgY3Vy
cmVudEVycm9yTWVzc2FnZSkNCgkJCXRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsNCgkJbG9nRGVi
dWcoImdldEhhbmRsaW5nc0ZvckxvY2F0aW9uOiAtLT4gIiArIHBMb2NhdGlvblhQYXRoICsgIiwg
IiArIHBFeGNlcHRpb25UeXBlICsgIiwgIiArIGN1cnJlbnRDYWxsZXJUeXBlICsgIiwgIiArIGN1
cnJlbnRFcnJvck1lc3NhZ2UpOw0KDQoJCS8vIGdldCBleGNlcHRpb24gbGlzdCBmb3IgbG9jYXRp
b24NCgkJTGlzdDxFbGVtZW50PiBleGNlcHRpb25Ob2RlcyA9IG51bGw7DQoJCXRyeSB7DQoJCQll
eGNlcHRpb25Ob2RlcyA9IChMaXN0PEVsZW1lbnQ+KSBYUGF0aC5zZWxlY3ROb2RlcyhwRXJyb3JI
YW5kbGluZywgcExvY2F0aW9uWFBhdGgpOw0KCQl9IA0KCQljYXRjaCAoSkRPTUV4Y2VwdGlvbiBl
KSB7DQoJCQlsb2dFcnJvcigiSkRPTSBFcnJvciBkdXJpbmcgZXh0cmFjdGlvbiBvZiBlcnJvciB0
eXBlcyBmcm9tIGV4Y2VwdGlvbiBoYW5kbGluZyBkZWZpbml0aW9uOiAiICsgZS5nZXRNZXNzYWdl
KCkpOw0KCQkJbG9nRGVidWcoImdldEhhbmRsaW5nc0ZvckxvY2F0aW9uOiA8LS0gbnVsbCAoSkRP
TUV4Y2VwdGlvbjogIiArIGUuZ2V0TWVzc2FnZSgpICsgIikiKTsNCgkJCXJldHVybiBudWxsOw0K
CQl9DQogICAgICAgIC8vIGNoZWNrIGV4Y2VwdGlvbiBub2RlcyBzYW5pdHkNCgkJaWYgKGV4Y2Vw
dGlvbk5vZGVzID09IG51bGwgfHwgZXhjZXB0aW9uTm9kZXMuaXNFbXB0eSgpKSB7DQoJCQlsb2dE
ZWJ1ZygiZ2V0SGFuZGxpbmdzRm9yTG9jYXRpb246IDwtLSBudWxsIChObyBleGNlcHRpb25Ob2Rl
cykiKTsNCgkJCXJldHVybiBudWxsOw0KCQl9CQkJDQoJCQ0KCQkvLyBleHRyYWN0IGV4Y2VwdGlv
bnMgZnJvbSBsaXN0LCBpZiBsb2NhdGlvbiBleGlzdHMgYW5kIGV4Y2VwdGlvbg0KCQkvLyBkZWZp
bml0aW9ucyBhcmUgY29udGFpbmVkDQoJCS8vIGl0ZXJhdGlvbiBvdmVyIGFsbCBkZWZpbmVkIGV4
Y2VwdGlvbnMgaW4gbG9jYXRpb24NCgkJRXhjZXB0aW9uSGFuZGxpbmdJbmZvIGV4Y2VwdGlvbkhh
bmRsaW5nSW5mbyA9IG51bGw7DQoJCUVsZW1lbnQgZXhjZXB0aW9uSGFuZGxpbmdFbGVtZW50ID0g
bnVsbDsNCgkJZm9yIChFbGVtZW50IGV4Y2VwdGlvbk5vZGUgOiBleGNlcHRpb25Ob2Rlcykgew0K
CQkJYm9vbGVhbiBpc0Vycm9yTWVzc2FnZUNvbnRhaW5zQ2hlY2tUcnVlID0gZmFsc2U7DQoJCQlm
aW5hbCBTdHJpbmcgZXJyb3JNZXNzYWdlQ29udGFpbnNGcm9tRGVmaW5pdGlvbiA9IGV4Y2VwdGlv
bk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9FUlJPUl9NRVNTQUdFX0NPTlRB
SU5TKTsNCgkJCWlmIChlcnJvck1lc3NhZ2VDb250YWluc0Zyb21EZWZpbml0aW9uID09IG51bGwg
fHwNCgkJCQkoY3VycmVudEVycm9yTWVzc2FnZSAhPSBudWxsICYmDQoJCQkJZXJyb3JNZXNzYWdl
Q29udGFpbnNGcm9tRGVmaW5pdGlvbiAhPSBudWxsICYmDQoJCQkJY3VycmVudEVycm9yTWVzc2Fn
ZS5jb250YWlucyhlcnJvck1lc3NhZ2VDb250YWluc0Zyb21EZWZpbml0aW9uKSkpIA0KCQkJew0K
CQkJCWlzRXJyb3JNZXNzYWdlQ29udGFpbnNDaGVja1RydWUgPSB0cnVlOw0KCQkJfQ0KDQoJCQkv
LyBDaGVjayBmb3Igb3B0aW9uYWwgYXR0cmlidXQgZXJyb3JNZXNzYWdlUmVnZXg6DQoJCQlib29s
ZWFuIGlzRXJyb3JNZXNzYWdlUmVnZXhDaGVja1RydWUgPSBmYWxzZTsNCgkJCWZpbmFsIFN0cmlu
ZyBlcnJvck1lc3NhZ2VSZWdleEZyb21EZWZpbml0aW9uID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRy
aWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9SX01FU1NBR0VfUkVHRVhfSUQpOw0KCQkJaWYg
KGVycm9yTWVzc2FnZVJlZ2V4RnJvbURlZmluaXRpb24gPT0gbnVsbCB8fA0KCQkJCShjdXJyZW50
RXJyb3JNZXNzYWdlICE9IG51bGwgJiYNCgkJCQllcnJvck1lc3NhZ2VSZWdleEZyb21EZWZpbml0
aW9uICE9IG51bGwgJiYNCgkJCQljdXJyZW50RXJyb3JNZXNzYWdlLm1hdGNoZXMoZXJyb3JNZXNz
YWdlUmVnZXhGcm9tRGVmaW5pdGlvbikpKSANCgkJCXsNCgkJCQlpc0Vycm9yTWVzc2FnZVJlZ2V4
Q2hlY2tUcnVlID0gdHJ1ZTsNCgkJCX0NCgkJCQ0KCQkJLy8gQ2hlY2sgZm9yIG9wdGlvbmFsIGF0
dHJpYnV0IGNhbGxlclR5cGU6DQoJCQlib29sZWFuIGlzQ2FsbGVyVHlwZUNoZWNrVHJ1ZSA9IGZh
bHNlOw0KCQkJZmluYWwgU3RyaW5nIGNhbGxlclR5cGVGcm9tRGVmaW5pdGlvbiA9IGV4Y2VwdGlv
bk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9FUlJPUl9DQUxMRVJfVFlQRV9J
RCk7DQoJCQlpZiAoY2FsbGVyVHlwZUZyb21EZWZpbml0aW9uID09IG51bGwgfHwNCgkJCQkoY3Vy
cmVudENhbGxlclR5cGUgIT0gbnVsbCAmJg0KCQkJCWNhbGxlclR5cGVGcm9tRGVmaW5pdGlvbiAh
PSBudWxsICYmDQoJCQkJY3VycmVudENhbGxlclR5cGUuZXF1YWxzKGNhbGxlclR5cGVGcm9tRGVm
aW5pdGlvbikpKSANCgkJCXsNCgkJCQlpc0NhbGxlclR5cGVDaGVja1RydWUgPSB0cnVlOw0KCQkJ
fQ0KCQkJDQoJCQkvLyBpZiBkZWZpbmVkIGV4Y2VwdGlvbiB0eXBlIGVxdWFscyBleGNlcHRpb24s
IHNldCBoYW5kbGluZyBhbmQNCgkJCS8vIGV4aXQgbG9vcA0KCQkJZmluYWwgU3RyaW5nIGV4Y2Vw
dGlvblR5cGVGcm9tRGVmaW5pdGlvbiA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUo
RUhEX0FUVFJJQlVURV9FUlJPUl9UWVBFX0lEKTsNCgkJCWlmIChleGNlcHRpb25UeXBlRnJvbURl
ZmluaXRpb24uZXF1YWxzKHBFeGNlcHRpb25UeXBlKSAmJiBpc0Vycm9yTWVzc2FnZUNvbnRhaW5z
Q2hlY2tUcnVlICYmIGlzRXJyb3JNZXNzYWdlUmVnZXhDaGVja1RydWUgJiYgaXNDYWxsZXJUeXBl
Q2hlY2tUcnVlKSB7DQoJCQkJZXhjZXB0aW9uSGFuZGxpbmdJbmZvID0gZ2V0UmV0VmFsKGV4Y2Vw
dGlvbk5vZGUsIHBFeGNlcHRpb25UeXBlKTsNCgkJCQlleGNlcHRpb25IYW5kbGluZ0VsZW1lbnQg
PSBleGNlcHRpb25Ob2RlOw0KCQkJCWJyZWFrOw0KCQkJfQkNCgkJCSAgDQoJCQkvLyBpZiBnZW5l
cmljIGhhbmRsaW5nIGlzIGFsbG93ZWQgYW5kIGRlZmluZWQgKHR5cGU9ImFsbCIpLCBzZXQgKGNh
Y2hlKQ0KCQkJLy8gZ2VuZXJpYyBoYW5kbGluZw0KCQkJZWxzZSBpZiAoZXhjZXB0aW9uVHlwZUZy
b21EZWZpbml0aW9uLmVxdWFscyhFSERfVkFMVUVfR0VORVJJQ19FUlJPUl9UWVBFX0lEKSAmJiBp
c0Vycm9yTWVzc2FnZUNvbnRhaW5zQ2hlY2tUcnVlICYmIGlzRXJyb3JNZXNzYWdlUmVnZXhDaGVj
a1RydWUgJiYgaXNDYWxsZXJUeXBlQ2hlY2tUcnVlKSB7DQoJCQkJZXhjZXB0aW9uSGFuZGxpbmdJ
bmZvID0gZ2V0UmV0VmFsKGV4Y2VwdGlvbk5vZGUsIHBFeGNlcHRpb25UeXBlKTsNCgkJCQlleGNl
cHRpb25IYW5kbGluZ0VsZW1lbnQgPSBleGNlcHRpb25Ob2RlOw0KCQkJCWJyZWFrOw0KCQkJfQ0K
CQl9DQoNCgkJaWYgKGV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9PSBudWxsKSB7DQoJCQlyZXR1
cm4gbnVsbDsNCgkJfSBlbHNlIHsNCgkJCS8vIGNoZWNrIGhhbmRsaW5nIG5vZGVzIHNhbml0eQ0K
CQkJZm9yIChPYmplY3QgbiA6IGV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudC5nZXRDaGlsZHJlbihF
SERfQVRUUklCVVRFX0hBTkRMSU5HKSkgew0KCQkJCQlleGNlcHRpb25IYW5kbGluZ0luZm8uYWRk
U2VydmljZU5hbWUoKChFbGVtZW50KSBuKS5nZXRUZXh0KCkpOw0KCQkJfQ0KDQoJCQlsb2dEZWJ1
ZygiZ2V0SGFuZGxpbmdzRm9yTG9jYXRpb246IDwtLSAiICsgZXhjZXB0aW9uSGFuZGxpbmdJbmZv
KTsNCgkJCXJldHVybiBleGNlcHRpb25IYW5kbGluZ0luZm87DQoJCX0NCgkJDQoJfQ0KCQ0KCXBy
aXZhdGUgc3RhdGljIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBnZXRSZXRWYWwoRWxlbWVudCBleGNl
cHRpb25Ob2RlLCBTdHJpbmcgZXhjZXB0aW9uVHlwZSkgewkNCgkJZmluYWwgU3RyaW5nIGVycm9y
VG9CZVRocm93biA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVU
RV9FUlJPUl9UT19CRV9USFJPV05fSUQpOw0KCQlmaW5hbCBTdHJpbmcgdHlwZSA9IGV4Y2VwdGlv
bk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9FUlJPUl9UWVBFX0lEKTsNCgkJ
ZmluYWwgU3RyaW5nIGV4Y2VwdGlvbkhhbmRsaW5nSWQgPSBleGNlcHRpb25Ob2RlLmdldEF0dHJp
YnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfSEFORExJTkdfSURfSUQpOw0KCQlmaW5hbCBT
dHJpbmcgbWF4UmV0cnlBdHRlbXB0cyA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUo
RUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMpOw0KCQlmaW5hbCBTdHJpbmcgcHJpbnRC
dXNpbmVzc09iamVjdFN0ciA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX1BS
SU5UX0JVU0lORVNTX09CSkVDVF9JRCk7DQoJCWZpbmFsIGJvb2xlYW4gcHJpbnRCdXNpbmVzc09i
amVjdCA9IHByaW50QnVzaW5lc3NPYmplY3RTdHIgPT0gbnVsbCA/IGZhbHNlIDogQm9vbGVhbi5w
YXJzZUJvb2xlYW4ocHJpbnRCdXNpbmVzc09iamVjdFN0cik7DQoJCXJldHVybiBuZXcgRXhjZXB0
aW9uSGFuZGxpbmdJbmZvKGVycm9yVG9CZVRocm93biwgdHlwZSwgZXhjZXB0aW9uSGFuZGxpbmdJ
ZCwgZXhjZXB0aW9uVHlwZSwgbWF4UmV0cnlBdHRlbXB0cywgcHJpbnRCdXNpbmVzc09iamVjdCk7
DQoJfQ0KCQ0KDQoJcHJpdmF0ZSBzdGF0aWMgSURhdGEgYnVpbGRDb21wYWN0RXJyb3JJbmZvKFN0
cmluZyBwRXJyb3JMb2NhdGlvbiwgU3RyaW5nIGZsb3dTdGVwKSB7DQoJCUlEYXRhIGNvbXBhY3RF
cnJvckluZm8gPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCUlEYXRhQ3Vyc29yIGNvbXBhY3RF
cnJvckluZm9DdXJzb3IgPSBjb21wYWN0RXJyb3JJbmZvLmdldEN1cnNvcigpOw0KDQoJCUlEYXRh
VXRpbC5wdXQoY29tcGFjdEVycm9ySW5mb0N1cnNvciwgQ09NUEFDVF9FUlJPUl9MT0NBVElPTl9J
RCwgcEVycm9yTG9jYXRpb24pOw0KCQlJRGF0YVV0aWwucHV0KGNvbXBhY3RFcnJvckluZm9DdXJz
b3IsIENPTVBBQ1RfRVJST1JfRkxPV19TVEVQLCBmbG93U3RlcCk7DQoNCgkJY29tcGFjdEVycm9y
SW5mb0N1cnNvci5kZXN0cm95KCk7DQoNCgkJcmV0dXJuIGNvbXBhY3RFcnJvckluZm87DQoJfQ0K
CQkNCglAU3VwcHJlc3NXYXJuaW5ncygicmF3dHlwZXMiKQ0KCXByaXZhdGUgc3RhdGljIGZpbmFs
IE5TU2VydmljZSBnZXRDdXJyZW50VG9wTGV2ZWxTZXJ2aWNlKCkgew0KCQlOU1NlcnZpY2UgdG9w
TGV2ZWxTZXJ2aWNlTmFtZSA9IG51bGw7DQoJCUludm9rZVN0YXRlIHN0YXRlID0gSW52b2tlU3Rh
dGUuZ2V0Q3VycmVudFN0YXRlKCk7DQoJCWlmIChzdGF0ZSAhPSBudWxsKSB7DQoJCQlTdGFjayBj
YWxsU3RhY2sgPSBzdGF0ZS5nZXRDYWxsU3RhY2soKTsNCgkJCWlmIChjYWxsU3RhY2sgIT0gbnVs
bCAmJiBjYWxsU3RhY2suc2l6ZSgpID4gMCkgew0KCQkJCXRvcExldmVsU2VydmljZU5hbWUgPSAo
TlNTZXJ2aWNlKSBjYWxsU3RhY2suZWxlbWVudEF0KDApOw0KCQkJfQ0KCQl9DQoJCXJldHVybiB0
b3BMZXZlbFNlcnZpY2VOYW1lOw0KCX0NCgkNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
Z2V0TWVzc2FnZVVJRChJRGF0YSBtZXRhRGF0YSkgew0KCQlpZihtZXRhRGF0YSAhPSBudWxsKSB7
DQoJCQlJRGF0YU1hcCBtZXRhRGF0YU1hcCA9IG5ldyBJRGF0YU1hcChtZXRhRGF0YSk7DQoJCQly
ZXR1cm4gbWV0YURhdGFNYXAuZ2V0QXNTdHJpbmcoVUlEX0lEKTsNCgkJfQ0KCQlyZXR1cm4gbnVs
bDsNCgl9DQoNCglwdWJsaWMgc3RhdGljIHZvaWQgaW5pdEhhbmRsaW5ncyhVUkwgcFVybCwgU0FY
QnVpbGRlciBwQnVpbGRlcikgew0KCQlmaW5hbCBTQVhCdWlsZGVyIGJ1aWxkZXI7DQoJCWlmIChw
QnVpbGRlciA9PSBudWxsKSB7DQoJCQlidWlsZGVyID0gbmV3IFNBWEJ1aWxkZXIoKTsNCgkJfSBl
bHNlIHsNCgkJCWJ1aWxkZXIgPSBwQnVpbGRlcjsNCgkJfQ0KCQlmaW5hbCBEb2N1bWVudCBkb2Mg
PSBsb2FkSGFuZGxpbmdzKHBVcmwsIGJ1aWxkZXIpOw0KCQlzeW5jaHJvbml6ZWQoZXhjZXB0aW9u
SGFuZGxpbmdMb2NrKSB7DQoJCQlfZXhjZXB0aW9uSGFuZGxpbmcgPSBkb2M7DQoJCX0NCgl9DQoJ
DQoJcHJpdmF0ZSBzdGF0aWMgRG9jdW1lbnQgbG9hZEhhbmRsaW5ncyhVUkwgcEZpbGUsIFNBWEJ1
aWxkZXIgcEJ1aWxkZXIpIHsNCgkJLy8gTG9hZCBleGNlcHRpb24gaGFuZGxpbmcgZGVmaW5pdGlv
biBmaWxlDQoJCQ0KCQl0cnkgew0KCQkJZmluYWwgRG9jdW1lbnQgZWhkID0gcEJ1aWxkZXIuYnVp
bGQocEZpbGUpOw0KCQkNCgkJCWxvZ0luZm8oIlN1Y2Nlc3NmdWxseSBpbml0aWFsaXplZCBlcnJv
ciBoYW5kbGluZyIpOw0KCQkJcmV0dXJuIGVoZDsNCgkJfSANCgkJY2F0Y2ggKEpET01FeGNlcHRp
b24gZSkgew0KCQkJbG9nRXJyb3IoIkpET00gRXJyb3IgZHVyaW5nIGluaXRpYWxpemF0aW9uIG9m
IGVycm9yIGhhbmRsaW5nOiAiICsgZS5nZXRNZXNzYWdlKCkpOw0KCQkJdGhyb3cgbmV3IFVuZGVj
bGFyZWRUaHJvd2FibGVFeGNlcHRpb24oZSk7DQoJCX0gDQoJCWNhdGNoIChJT0V4Y2VwdGlvbiBl
KSB7DQoJCQlsb2dFcnJvcigiSU8gRXJyb3IgZHVyaW5nIGluaXRpYWxpemF0aW9uIG9mIGVycm9y
IGhhbmRsaW5nOiAiICsgZS5nZXRNZXNzYWdlKCkpOw0KCQkJdGhyb3cgbmV3IFVuZGVjbGFyZWRU
aHJvd2FibGVFeGNlcHRpb24oZSk7DQoJCX0NCgl9DQoNCg0KCXByaXZhdGUgc3RhdGljIFN0cmlu
ZyBhc1N0cmluZyhTdHJpbmdbXSB0ZW1wUGFydHMpIHsNCgkJU3RyaW5nQnVpbGRlciBidWlsZGVy
ID0gbmV3IFN0cmluZ0J1aWxkZXIoKTsNCgkJZm9yIChTdHJpbmcgc3RyaW5nIDogdGVtcFBhcnRz
KSB7DQoJCQlidWlsZGVyLmFwcGVuZChzdHJpbmcpLmFwcGVuZCgiLCIpOw0KCQl9DQoJCXJldHVy
biBidWlsZGVyLnRvU3RyaW5nKCk7DQoJfQ0KDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5n
IExPR19TVkNfUEFUSCA9ICJ3eC5yZXNpbGllbmNlLmltcGwubG9nIjsNCg0KCXB1YmxpYyBzdGF0
aWMgdm9pZCBsb2dJbmZvKFN0cmluZyBtZXNzYWdlKSB7DQoJCWxvZ0ltcGwobWVzc2FnZSwgIklu
Zm8iKTsNCgl9DQoJDQoJcHVibGljIHN0YXRpYyB2b2lkIGxvZ1dhcm4oU3RyaW5nIG1lc3NhZ2Up
IHsNCgkJbG9nSW1wbChtZXNzYWdlLCAiV2FybiIpOw0KCX0NCgkNCglwdWJsaWMgc3RhdGljIHZv
aWQgbG9nRXJyb3IoU3RyaW5nIG1lc3NhZ2UpIHsNCgkJbG9nSW1wbChtZXNzYWdlLCAiRXJyb3Ii
KTsNCgl9DQoNCglwdWJsaWMgc3RhdGljIHZvaWQgbG9nVHJhY2UoU3RyaW5nIG1lc3NhZ2UpIHsN
CgkJbG9nSW1wbChtZXNzYWdlLCAiVHJhY2UiKTsNCgl9DQoJDQoJcHVibGljIHN0YXRpYyB2b2lk
IGxvZ0RlYnVnKFN0cmluZyBtZXNzYWdlKSB7DQoJCWxvZ0ltcGwobWVzc2FnZSwgIkRlYnVnIik7
DQoJfQ0KCQ0KCXB1YmxpYyBzdGF0aWMgdm9pZCBsb2dGYXRhbChTdHJpbmcgbWVzc2FnZSkgew0K
CQlsb2dJbXBsKG1lc3NhZ2UsICJGYXRhbCIpOw0KCX0NCgkNCglwcml2YXRlIHN0YXRpYyB2b2lk
IGxvZ0ltcGwoU3RyaW5nIG1lc3NhZ2UsIFN0cmluZyBsZXZlbCkgew0KCQlJRGF0YSBpbnB1dCA9
IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsNCgkJSURhdGFNYXAgaW5wdXRNYXAgPSBuZXcgSURhdGFN
YXAoaW5wdXQpOw0KCQlpbnB1dE1hcC5wdXQoIm1lc3NhZ2UiLCBtZXNzYWdlKTsNCgkJaW5wdXRN
YXAucHV0KCJmdW5jdGlvbiIsIFdYX1JFU0lMSUVOQ0VfRVJST1IpOw0KCQlpbnB1dE1hcC5wdXQo
ImxldmVsIiwgbGV2ZWwpOw0KCQkNCgkJdHJ5IHsNCgkJCVNlcnZpY2UuZG9JbnZva2UoTE9HX1NW
Q19QQVRILCAibG9nIiwgaW5wdXQpOw0KCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgew0KCQkJZGVi
dWdMb2dJbmZvKCJFcnJvciBpbiBsb2dJbXBsOiAiICsgZS5nZXRMb2NhbGl6ZWRNZXNzYWdlKCkp
Ow0KCQl9DQoJfQ0KDQoJcHJpdmF0ZSBzdGF0aWMgdm9pZCBkZWJ1Z0xvZ0luZm8oU3RyaW5nIG1l
c3NhZ2UpIHsNCgkgICAgSm91cm5hbExvZ2dlci5sb2coNCwgIEpvdXJuYWxMb2dnZXIuRkFDX0ZM
T1dfU1ZDLCBKb3VybmFsTG9nZ2VyLklORk8sIFdYX1JFU0lMSUVOQ0VfRVJST1IsIG1lc3NhZ2Up
Ow0KCX0NCg0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioNCgkvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS1YTUwgTk9E
RSBOQU1FIERFRklOSVRJT05TLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoJLy8gKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0K
CXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfTk9ERV9ET0NfUk9PVF9JRCA9ICJleGNl
cHRpb25IYW5kbGluZyI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9OT0RFX0dM
T0JBTF9FUlJPUl9UWVBFX0lEID0gImdsb2JhbEV4Y2VwdGlvbiI7DQoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEVIRF9OT0RFX0VSUk9SX0xPQ0FUSU9OX0lEID0gImxvY2F0aW9uIjsNCglw
cml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX05PREVfRVJST1JfVFlQRV9JRCA9ICJleGNl
cHRpb24iOw0KDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS1YTUwgTk9E
RSBBVFRSSUJVVEUgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfVFlQRV9J
RCA9ICJ0eXBlIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9F
UlJPUl9DQUxMRVJfVFlQRV9JRCA9ICJjYWxsZXJUeXBlIjsJCQ0KCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX01FU1NBR0VfQ09OVEFJTlMgPSAiZXJyb3JN
ZXNzYWdlQ29udGFpbnMiOwkJDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRS
SUJVVEVfRVJST1JfTUVTU0FHRV9SRUdFWF9JRCA9ICJlcnJvck1lc3NhZ2VSZWdleCI7CQkNCglw
cml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9MT0NBVElPTl9OQU1FX0lE
ID0gIm5hbWUiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VS
Uk9SX1RPX0JFX1RIUk9XTl9JRCA9ICJlcnJvclRvQmVUaHJvd24iOw0KCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX0hBTkRMSU5HX0lEX0lEID0gImV4Y2Vw
dGlvbkhhbmRsaW5nSWQiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklC
VVRFX0hBTkRMSU5HPSAiaGFuZGxpbmciOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBF
SERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUyA9ICJtYXhSZXRyeUF0dGVtcHRzIjsNCglw
cml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9SRVRSWV9DT1VOVCA9ICJy
ZXRyeUNvdW50IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9G
VU5DVElPTiA9ICJAV3h4UmVzaWxpZW5jZS5sb2dnaW5nLmZ1bmN0aW9uQCI7DQoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIEVIRF9QUklOVF9CVVNJTkVTU19PQkpFQ1RfSUQgPSAicHJpbnRC
dXNpbmVzc09iamVjdCI7DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0t
LS0tWE1MIE5PREUgVkFMVUUgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX1ZBTFVFX0dFTkVSSUNf
RVJST1JfVFlQRV9JRCA9ICJhbGwiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERf
VkFMVUVfR0xPQkFMX0VSUk9SX0hBTkRMSU5HX0lEID0gImdsb2JhbCI7DQoNCgkvLyAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tSU5QVVQgRVJST1IgRklFTEQgSUQgREVGSU5JVElP
TlMtLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgRVJST1JfSU5GT19JRCA9ICJleGNlcHRpb25JbmZvIjsNCglwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgRVhDTFVERV9TRVJWSUNFID0gIkBXeHhSZXNpbGllbmNlLmVycm9ySGFu
ZGxpbmcuZXhjbHVkZVNlcnZpY2VGcm9tRXJyb3JIYW5kbGluZ0AiOw0KCQ0KCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0VSUk9SID0gImVycm9yIjsNCglwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19FUlJPUl9UWVBFID0gImVycm9yVHlwZSI7DQoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fQ0FMTF9TVEFDS19TRVJWSUNF
ID0gInNlcnZpY2UiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0NB
TExfU1RBQ0tfRkxPV19TVEVQID0gImZsb3dTdGVwIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgRVJST1JfSU5GT19DQUxMX1NUQUNLID0gImNhbGxTdGFjayI7DQoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fRVJST1JfRFVNUCA9ICJlcnJvckR1bXAiOw0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX1RJTUUgPSAidGltZSI7DQoJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fTkVTVEVEX0VSUk9SX0lEID0gIm5l
c3RlZEVycm9ySW5mbyI7DQoNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgR0VORVJJQ19W
QUxVRV9NQVBfSUQgPSAiZ2VuZXJpY1ZhbHVlTWFwIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgR0VORVJJQ19FUlJPUl9NRVNTQUdFX0lEID0gImdlbmVyaWNFcnJvck1lc3NhZ2UiOw0K
DQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tT1VUUFVUIEhBTkRMRUQgRVJST1Ig
RklFTEQgSUQgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19JRCA9ICJoYW5kbGVkRXJy
b3JJbmZvIjsNCgkNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9J
TkZPX1JPT1RfSUQgPSAidG9wU2VydmljZUVycm9yIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0hBTkRMRURfSUQgPSAiaGFuZGxlZFNlcnZpY2VFcnJv
ciI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19BUFBM
SUNBVElPTl9TRVJWSUNFX0lEID0gImFwcGxpY2F0aW9uU2VydmljZUVycm9yIjsNCglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX09SSUdJTl9JRCA9ICJyb290
U2VydmljZUVycm9yIjsNCg0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VS
Uk9SX0lORk9fSEFORExJTkdfTE9DQVRJT05fSUQgPSAiaGFuZGxpbmdMb2NhdGlvbiI7DQoJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19IQU5ETElOR19UWVBF
X0lEID0gImhhbmRsaW5nVHlwZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRM
RURfRVJST1JfSU5GT19ERVBUSF9JRCA9ICJlcnJvckRlcHRoIjsNCglwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0VSUk9SX0NPREUgPSAiZXJyb3JDb2RlIjsN
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0NBTExfU1RB
Q0sgPSAiY2FsbFN0YWNrIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9F
UlJPUl9JTkZPX0VSUk9SX0RVTVAgPSAiZXJyb3JEdW1wIjsNCglwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX1RJTUUgPSAidGltZSI7DQoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19QSVBFTElORSA9ICJwaXBlbGluZSI7
DQoNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfTVNHX0lEID0gImVycm9yTWVz
c2FnZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIENPTVBBQ1RfRVJST1JfTE9DQVRJ
T05fSUQgPSAiZXJyb3JMb2NhdGlvbiI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIENP
TVBBQ1RfRVJST1JfRkxPV19TVEVQID0gImVycm9yRmxvd1N0ZXAiOw0KCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBFUlJPUl9UWVBFX0lEID0gImVycm9yVHlwZSI7DQoNCgkvLyAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLUdFTkVSSUMgRE9DIEZJRUxEIElEIERFRklOSVRJ
T05TLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgQlVTSU5FU1NfRE9DX0lEID0gImJ1c2luZXNzT2JqZWN0IjsNCglwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgUFJJTlRfQlVTSU5FU1NfT0JKRUNUX0lEID0gInByaW50QnVzaW5l
c3NPYmplY3QiOw0KDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tRVhD
RVBUSU9OIEhBTkRMSU5HIERFRklOSVRJT04tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIE1FVEFEQVRBX0lEID0gInd4TWV0YURh
dGEiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBMT0dHSU5HX0ZVTkNUSU9OID0gIkBX
eHhSZXNpbGllbmNlLmxvZ2dpbmcuZnVuY3Rpb25AIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgVUlEX0lEID0gInV1aWQiOw0KDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0t
LS0tLS0tLS0tRVhDRVBUSU9OIEhBTkRMSU5HIERFRklOSVRJT04tLS0tLS0tLS0tLS0tLS0tLS0N
CgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgRG9jdW1lbnQgX2V4Y2VwdGlvbkhhbmRs
aW5nOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVjdCBleGNlcHRpb25IYW5kbGluZ0xvY2sg
PSBuZXcgT2JqZWN0KCk7DQoJcHJpdmF0ZSBzdGF0aWMgRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5l
ciBfZXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lcjsNCglwcml2YXRlIHN0YXRpYyBDYWxsZXJUeXBl
U3VwcGxpZXIgREVGQVVMVF9DQUxMRVJfVFlQRV9TVVBQTElFUiA9IG5ldyBDYWxsZXJUeXBlU3Vw
cGxpZXIoKSB7DQoJCUBPdmVycmlkZQ0KCQlwdWJsaWMgU3RyaW5nIGdldCgpIHsNCgkJCXJldHVy
biBnZXRDYWxsZXJUeXBlQnlDYWxsaW5nU2VydmljZSgpOw0KCQl9DQoJfTsNCglwcml2YXRlIHN0
YXRpYyBDYWxsZXJUeXBlU3VwcGxpZXIgY2FsbGVyVHlwZVN1cHBsaWVyID0gbnVsbDsNCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBPYmplY3QgY2FsbGVyVHlwZVN1cHBsaWVyTG9jayA9IG5ldyBPYmpl
Y3QoKTsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBPYmplY3QgZXhjZXB0aW9uSGFuZGxpbmdMaXN0
ZW5lckxvY2sgPSBuZXcgT2JqZWN0KCk7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgT2JqZWN0IGNy
ZWF0ZVN1bW1hcml6ZWRFeGNlcHRpb25IYW5kbGluZ0xvY2sgPSBuZXcgT2JqZWN0KCk7DQoJLy8g
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tSU5QVVQgR0VUIFZBTFVFIERFRklO
SVRJT04tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgU3RyaW5nIE1BWF9SRVRSWV9BVFRFTVBUU19CRUZPUkVfQ0FOQ0VMX1JFVFJZID0g
Im1heFJldHJ5QXR0ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIEJSRUFLX1JFVFJZX0xPT1AgPSAiYnJlYWsucmV0cnkubG9vcC5mb3IuIjsNCgkv
LyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1FUlJPUiBWQUxVRSBERUZJTklU
SU9OLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBFUlJPUl9UUkFOU0lFTlQgPSAiVFJBTlNJRU5UIjsNCglwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfRkFUQUwgPSAiRkFUQUwiOw0KCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBFUlJPUl9OT05FID0gIk5PTkUiOwkNCgkNCglwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgU1VNTUFSSVpFRF9FWENFUFRJT05fSEFORExJTkdfRklMRSA9ICJFeGNlcHRp
b25IYW5kbGluZ1N1bW1hcml6ZWQueG1sIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
RVhDRVBUSU9OX0hBTkRMSU5HX1hTRF9GSUxFID0gIkV4Y2VwdGlvbkhhbmRsaW5nLnhzZCI7DQoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFdYX1JFU0lMSUVOQ0UgPSAiV3h4UmVzaWxpZW5j
ZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFdYX1JFU0lMSUVOQ0VfRVJST1IgPSAi
V3h4UmVzaWxpZW5jZS5FcnJvciI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9S
X0hBTkRMSU5HX1hNTF9GSUxFID0gIkV4Y2VwdGlvbkhhbmRsaW5nLnhtbCI7DQoNCg0KCQ0KCQ0K
CQ0KCQ0KCQ0KCQ0KCQ0KCQ0KCQ0KCQ0K</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.wm.util.JournalLogger</value>
    <value>com.softwareag.util.IDataMap</value>
    <value>com.wm.app.audit.IAuditRuntime</value>
    <value>wx.resilience.impl.ErrorInfo</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler.Creator</value>
    <value>wx.resilience.impl.Exceptions</value>
    <value>wx.resilience.impl.Paths</value>
    <value>com.wm.lang.ns.NSName</value>
    <value>java.io.File</value>
    <value>java.io.IOException</value>
    <value>java.util.*</value>
    <value>javax.xml.transform.Source</value>
    <value>javax.xml.transform.stream.StreamSource</value>
    <value>javax.xml.validation.Schema</value>
    <value>javax.xml.validation.SchemaFactory</value>
    <value>javax.xml.validation.Validator</value>
    <value>org.jdom2.Document</value>
    <value>org.jdom2.Element</value>
    <value>org.jdom2.JDOMException</value>
    <value>org.jdom2.input.SAXBuilder</value>
    <value>org.jdom2.xpath.XPath</value>
    <value>org.xml.sax.SAXException</value>
    <value>com.wm.app.b2b.server.*</value>
    <value>java.lang.reflect.UndeclaredThrowableException</value>
    <value>java.net.URL</value>
    <value>java.nio.file.Path</value>
    <value>com.wm.lang.ns.NSService</value>
  </array>
</Values>
